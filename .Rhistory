by = c("STATECD", "UNITCD", "COUNTYCD", "PLOT", "INVYR"))
tree <- left_join(tree, fvs_spp, by = "SPCD") %>%
mutate(SPPCD = ifelse(is.na(SPPCD), "OH", SPPCD))
ref_spp <- read_csv(paste0(my_wd, "/CT_FIA/REF_SPECIES.csv")) %>%
select(SPCD, WOOD_SPGR_MC12VOL_DRYWT)
tree <- inner_join(tree, ref_spp, by = "SPCD") %>%
mutate(STAND_ID = paste(STATECD, COUNTYCD, PLOT, sep ="_"))
tree_fvs <- tree
tree_fvs$STAND_ID
# Chunk 7
# Call R-to-FVS file
source("C://Users//matt//Documents//Arbor//Projects//Code//R-to-FVS//r_to_fvs.R")
# Chunk 8
VARIANT = "ne" # See https://www.fs.usda.gov/fvs/software/variantkey.shtml
LOCATION = 920 # This is for Allegheny National Forest (default, updated below). See local FVS variant guide
INV_PLOT_SIZE = 74.96528 # Fixed-radius plot expansion factor
BASAL_AREA_FACTOR	= -6.018046 # A positive value = basal area factor. Negative value = inverse of a large-tree fixed area plot.
BRK_DBH = 5
SITE_SPECIES = "SM" # FVS species code for site index species, if null
# Chunk 9
# APPLY example tree_fvs records FVS_tree_fvsInit_blank
TreeInit <- FVS_TreeInit_blank %>%
add_row(
# Gotta have these
STAND_ID = tree_fvs$STAND_ID,
PLOT_ID = tree_fvs$STAND_ID,
TREE_ID = tree_fvs$TREE,
SPECIES = tree_fvs$SPPCD ,
DIAMETER = tree_fvs$DIA,
YEAR = 2023,
# Good to have these
HT = tree_fvs$ACTUALHT,
HT_TO_LIVE_CROWN = tree_fvs$ACTUALHT*(tree_fvs$CR/100),
CRRATIO = tree_fvs$CR,
AGE = NA,
# Optional
STANDPLOT_ID = NA,
TREE_COUNT = NA,
HISTORY = ifelse(tree_fvs$STATUSCD == 1, 0, 6),
DIAMETER_HT = NA,
DG = NA,
HTG = NA,
DAMAGE1 = NA,
SEVERITY1 = NA,
DAMAGE2 = NA,
SEVERITY2 = NA,
DAMAGE3 = NA,
SEVERITY3 = NA,
DEFECT_CUBIC = NA,
DEFECT_BOARD = NA,
TREEVALUE = NA,
PRESCRIPTION = NA,
SLOPE = NA,
ASPECT = NA,
PV_CODE = NA,
PV_REF_CODE = NA,
TOPOCODE = NA,
SITEPREP = NA,
LOCATION = LOCATION,
) %>%
drop_na(TREE_ID)
# Chunk 10
# SUMMARIZE TreeInit to create PlotInit (list of plots)
plot <- tree_fvsInit %>%
group_by(STAND_ID) %>%
summarize(num_trees = n()) %>%
select(STAND_ID)
plot
nrow(plot)
plot <- inner_join(plot, stand_here2, by = "STAND_ID")
nrow(plot)
num_plot <- plot %>%
group_by(STAND_ID) %>%
summarize(num_plots = n()) %>%
select(STAND_ID, num_plots)
num_plot
# Chunk 11
# APPLY example plot records FVS_PlotInit_blank
PlotInit <- FVS_PlotInit_blank %>%
add_row(
# Gotta have these
STAND_ID = plot$STAND_ID,
PLOT_ID	= plot$STAND_ID,
STANDPLOT_ID = paste0(STAND_ID, "_", PLOT_ID),
VARIANT	= VARIANT,
INV_YEAR = 2023,
GROUPS = NA,
ADDFILES = NA,
FVSKEYWORDS = NA,
GIS_LINK = NA,
PROJECT_NAME = NA,
LATITUDE = NA,
LONGITUDE = NA,
REGION = NA,
FOREST = NA,
DISTRICT = NA,
COMPARTMENT = NA,
LOCATION = LOCATION,
ECOREGION = NA,
PV_CODE = NA,
PV_REF_CODE = NA,
AGE = NA,
ASPECT = NA,
SLOPE = NA,
ELEVATION = round(plot$ELEV/100, 0),
ELEVFT = plot$ELEV,
BASAL_AREA_FACTOR = NA,
INV_PLOT_SIZE = INV_PLOT_SIZE,
BRK_DBH = BRK_DBH,
NUM_PLOTS = NA,
NONSTK_PLOTS = NA,
SAM_WT = NA,
STK_PCNT = NA,
DG_TRANS = NA,
DG_MEASURE = NA,
HTG_TRANS = NA,
HTG_MEASURE = NA,
MORT_MEASURE = NA,
MAX_BA = NA,
MAX_SDI = NA,
SITE_SPECIES = plot$SPPCD,
SITE_INDEX = plot$SICOND,
MODEL_TYPE = NA,
PHYSIO_REGION = NA,
FOREST_TYPE = NA,
STATE	= NA,
COUNTY = NA,
FUEL_MODEL = NA,
FUEL_0_25 = NA,
FUEL_25_1 = NA,
FUEL_1_3 = NA,
FUEL_3_6_H = NA,
FUEL_6_12_H = NA,
FUEL_12_20_H = NA,
FUEL_20_35_H = NA,
FUEL_35_50_H = NA,
FUEL_GT_50_H = NA,
FUEL_3_6_S = NA,
FUEL_6_12_S = NA,
FUEL_12_20_S = NA,
FUEL_20_35_S = NA,
FUEL_35_50_S = NA,
FUEL_GT_50_S = NA,
FUEL_LITTER = NA,
FUEL_DUFF = NA,
PHOTO_REF = NA,
PHOTO_CODE = NA) %>%
drop_na(PLOT_ID)
PlotInit <- inner_join(PlotInit, num_plot)
PlotInit <- PlotInit %>%
select(-c(NUM_PLOTS))
PlotInit <- PlotInit %>%
rename(NUM_PLOTS = num_plots) %>%
relocate(NUM_PLOTS, .after = BRK_DBH)
# Chunk 12
# Summarize PlotInit to create StandInit (list of stands)
stand <- plot %>%
group_by(STAND_ID) %>%
summarize(num_trees = n()) %>%
select(STAND_ID)
stand
nrow(stand)
stand <- inner_join(stand, stand_here2, by = "STAND_ID")
nrow(stand)
# Chunk 13
# APPLY example stand records FVS_StandInit_blank
StandInit <- FVS_StandInit_blank %>%
add_row(
STAND_ID = stand$STAND_ID,
VARIANT = VARIANT,
INV_YEAR = 2023,
GROUPS = NA,
ADDFILES = NA,
FVSKEYWORDS = NA,
GIS_LINK = NA,
PROJECT_NAME = NA,
LATITUDE = NA,
LONGITUDE = NA,
REGION = NA,
FOREST = NA,
DISTRICT = NA,
COMPARTMENT = NA,
LOCATION	= LOCATION,
ECOREGION = NA,
PV_CODE = NA,
PV_REF_CODE = NA,
AGE = NA,
ASPECT = NA,
SLOPE	= NA,
ELEVATION = round(stand$ELEV/100, 0),
ELEVFT = stand$ELEV,
BASAL_AREA_FACTOR = BASAL_AREA_FACTOR,
INV_PLOT_SIZE = INV_PLOT_SIZE,
BRK_DBH = BRK_DBH,
NUM_PLOTS = NA,
NONSTK_PLOTS = NA,
SAM_WT = NA,
STK_PCNT = NA,
DG_TRANS = NA,
DG_MEASURE = NA,
HTG_TRANS = NA,
HTG_MEASURE = NA,
MORT_MEASURE = NA,
MAX_BA = NA,
MAX_SDI	= NA,
SITE_SPECIES = stand$SPPCD,
SITE_INDEX = stand$SICOND,
MODEL_TYPE = NA,
PHYSIO_REGION = NA,
FOREST_TYPE = NA,
STATE = NA,
COUNTY = NA,
FUEL_MODEL = NA,
FUEL_0_25 = NA,
FUEL_25_1	= NA,
FUEL_1_3 = NA,
FUEL_3_6_H= NA,
FUEL_6_12_H	= NA,
FUEL_12_20_H= NA,
FUEL_20_35_H= NA,
FUEL_35_50_H= NA,
FUEL_GT_50_H= NA,
FUEL_3_6_S= NA,
FUEL_6_12_S	= NA,
FUEL_12_20_S = NA,
FUEL_20_35_S= NA,
FUEL_35_50_S= NA,
FUEL_GT_50_S= NA,
FUEL_LITTER	= NA,
FUEL_DUFF	= NA,
PHOTO_REF	= NA,
PHOTO_CODE = NA) %>%
drop_na(STAND_ID)
StandInit <- inner_join(StandInit, num_plot)
StandInit <- StandInit %>%
select(-c(NUM_PLOTS))
StandInit <- StandInit %>%
rename(NUM_PLOTS = num_plots) %>%
relocate(NUM_PLOTS, .after = BRK_DBH)
# Chunk 14
# Omit YEAR from TreeInit (not needed in FVS file)
TreeInit <- TreeInit %>%
select(-c(LOCATION))
# Chunk 15
# Export FVS files to a single Excel workbook in the FVS-ready format
wb <- createWorkbook()
addWorksheet(wb = wb, sheetName = "FVS_StandInit")
writeData(wb = wb, sheet = 1, x = StandInit)
addWorksheet(wb = wb, sheetName = "FVS_PlotInit")
writeData(wb = wb, sheet = 2, x = PlotInit)
addWorksheet(wb = wb, sheetName = "tree_fvsInit")
writeDataTable(wb = wb, sheet = 3, x = tree_fvsInit)
saveWorkbook(wb,
paste0(my_wd, "/ct_fia_example.xlsx"), overwrite = TRUE)
# Export FVS files to a single Excel workbook in the FVS-ready format
wb <- createWorkbook()
addWorksheet(wb = wb, sheetName = "FVS_StandInit")
writeData(wb = wb, sheet = 1, x = StandInit)
addWorksheet(wb = wb, sheetName = "FVS_PlotInit")
writeData(wb = wb, sheet = 2, x = PlotInit)
addWorksheet(wb = wb, sheetName = "tree_fvsInit")
writeDataTable(wb = wb, sheet = 3, x = tree_fvsInit)
saveWorkbook(wb,
paste0(my_wd, "/ct_fia_example.xlsx"), overwrite = TRUE)
# Export FVS files to a single Excel workbook in the FVS-ready format
wb <- createWorkbook()
addWorksheet(wb = wb, sheetName = "FVS_StandInit")
writeData(wb = wb, sheet = 1, x = StandInit)
addWorksheet(wb = wb, sheetName = "FVS_PlotInit")
writeData(wb = wb, sheet = 2, x = PlotInit)
addWorksheet(wb = wb, sheetName = "tree_fvsInit")
writeDataTable(wb = wb, sheet = 3, x = TreeInit)
saveWorkbook(wb,
paste0(my_wd, "/ct_fia_example.xlsx"), overwrite = TRUE)
# Export FVS files to a single Excel workbook in the FVS-ready format
wb <- createWorkbook()
addWorksheet(wb = wb, sheetName = "FVS_StandInit")
writeData(wb = wb, sheet = 1, x = StandInit)
addWorksheet(wb = wb, sheetName = "FVS_PlotInit")
writeData(wb = wb, sheet = 2, x = PlotInit)
addWorksheet(wb = wb, sheetName = "TreeInit")
writeDataTable(wb = wb, sheet = 3, x = TreeInit)
saveWorkbook(wb,
paste0(my_wd, "/ct_fia_example.xlsx"), overwrite = TRUE)
blogdown:::serve_site()
View(tree_fvsInit)
stand
# Chunk 1
library(tidyverse)
library(usmap)
library(rFIA)
# Chunk 2
# Set working directory
my_wd <- setwd("C:/Users/matt/Documents/Arbor/Projects/Blog/")
# Chunk 3
my_reg <- readFIA(paste0(my_wd, "/CT_FIA"))
# Chunk 4
fvs_spp <- read_csv(paste0(my_wd, "/CT_FIA/FVS_NE_SPCD.csv"))
# Chunk 5
cond_new <-  my_reg$COND %>%
group_by(STATECD, UNITCD, COUNTYCD, PLOT, INVYR, CONDID) %>%
summarize(num_cond = n())
cond_new_id <- cond_new %>%
group_by(STATECD, UNITCD, COUNTYCD, PLOT, INVYR) %>%
summarize(num_condid = n())
# Percent of multi-condition plots in the region:
cond_new_id_summ <- cond_new_id %>%
mutate(num_conds = ifelse(num_condid == 1,
"Single condition",
"Multiple condition")) %>%
group_by(num_conds) %>%
summarize(num_conds_num = n()) %>%
mutate(Pct = num_conds_num / sum(num_conds_num) * 100)
cond_new_id_summ
cond_new <- inner_join(my_reg$COND, cond_new_id,
by = c("STATECD", "UNITCD",
"COUNTYCD", "PLOT", "INVYR")) %>%
filter(num_condid == 1)
stand <- full_join(cond_new, my_reg$PLOT,
by = c("STATECD", "UNITCD", "COUNTYCD", "PLOT", "INVYR")) %>%
filter((COUNTYCD == 3 & PLOT == 389 & INVYR == 2021) |
(COUNTYCD == 11 & PLOT == 67 & INVYR == 2019) |
(COUNTYCD == 11 & PLOT == 157 & INVYR == 2018))
stand_here <- stand %>%
select(STATECD, UNITCD, COUNTYCD, PLOT, INVYR, SICOND, SISP, ELEV) %>%
rename(SPCD  = SISP)
nrow(stand_here)
stand_here2 <- left_join(stand_here, fvs_spp, by = "SPCD") %>%
mutate(SPPCD = ifelse(is.na(SPPCD), "OH", SPPCD),
STAND_ID = paste(STATECD, COUNTYCD, PLOT, sep ="_")) %>%
select(-c(SPCD, SPPGROUP, SPPNUM, PLANTSCD, SCI_NAME, COM_NAME))
nrow(stand_here2)
stand
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
tree |> summary()
#devtools::install_github("mbrussell/stats4nr")
library(stats4nr)
tree |> summary()
tree
library(stats4nr)
data(tree)
data(elm)
View(carb)
elm |> summary()
elm %>% summary()
elm |> summary()
elm %>% summary()
elm |>
filter(DIA > 10)
library(tidyverse)
elm |>
filter(DIA > 10)
elm %>% summary()
elm |> summary()
elm %>% summary()
```{r, echo = f}
elm |> summary()
my_date <- "20230914"
ymd(my_date)
my_date <- "20230914"
type (my_date)
describe(my_date)
ymd(my_date)
View(carb)
dmy(my_date)
my_date2 <- "14092023"
dmy(my_date2)
my_date2 <- "14092023"
my_date2 <- 14092023
dmy(my_date2)
my_date <- "20230914"
my_date2 <- "14092023"
ymd(my_date)
dmy(my_date2)
# Chunk 1
library(tidyverse)
#devtools::install_github("mbrussell/stats4nr")
library(stats4nr)
data(elm)
# Chunk 2
elm |> summary()
# Chunk 3
elm %>% summary()
# Chunk 4
my_date <- "20230914"
my_date2 <- "14092023"
ymd(my_date)
dmy(my_date2)
?lag
elm
mutate(DIA2 = lag(DIA)
)
elm |>
mutate(DIA2 = lag(DIA))
elm
elm$DIA2 <- lag(DIA)
elm$DIA2 <- lag(elm$DIA)
elm
conflicts_prefer(dplyr::lag)
library(conflicted)
conflicts_prefer(dplyr::lag)
crown_class <- tribble(
~CROWN_CLASS_CD, ~CROWN_CLASS_NAME,
1, "Open grown",
2, "Not open grown",
3, "Not open grown",
4, "Not open grown",
5, "Not open grown"
)
elm |>
left_join(crown_class, join_by(CROWN_CLASS_CD))
# Chunk 1
library(tidyverse)
#devtools::install_github("mbrussell/stats4nr")
library(stats4nr)
data(elm)
# Chunk 2
elm |> summary()
# Chunk 3
elm %>% summary()
# Chunk 4
my_date <- "20230914"
my_date2 <- "14092023"
ymd(my_date)
dmy(my_date2)
# Chunk 5
library(conflicted)
conflicts_prefer(dplyr::lag)
# Chunk 6
elm |>
mutate(DIA2 = lag(DIA))
# Chunk 7
crown_class <- tribble(
~CROWN_CLASS_CD, ~CROWN_CLASS_NAME,
1, "Open grown",
2, "Not open grown",
3, "Not open grown",
4, "Not open grown",
5, "Not open grown"
)
elm |>
left_join(crown_class, join_by(CROWN_CLASS_CD))
crown_class <- tribble(
~crown_code, ~CROWN_CLASS_NAME,
1, "Open grown",
2, "Not open grown",
3, "Not open grown",
4, "Not open grown",
5, "Not open grown"
)
elm |>
left_join(crown_class, join_by(CROWN_CLASS_CD = crown_code))
elm |>
left_join(crown_class, join_by(CROWN_CLASS_CD == crown_code))
elm |>
group_by(CROWN_CLASS_CD) |>
summarize(mean_DIA = mean(DIA),
sd_DIA = sd(DIA))
elm |>
summarize(
mean_DIA = mean(DIA),
sd_DIA = sd(DIA),
.by = CROWN_CLASS_CD
)
elm
elm |>
mutate(DIA_HT = paste(DIA, ",", HT))
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT))
separate_wider_delim(DIA_HT, delim = ",")
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT, delim = ",")
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT,
delim = ",",
names = c("DIA2", "HT2"))
blogdown:::serve_site()
blogdown:::serve_site()
elm |>
left_join(crown_class, join_by(CROWN_CLASS_CD == crown_code)) |>
select(DIA, HT, CROWN_CLASS_CD, CROWN_CLASS_NAME)
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
select(DIA, HT, DIA_HT)
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT,
delim = ",",
names = c("DIA2", "HT2")) |>
select(DIA, HT, DIA_HT, DIA2, HT2)
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT,
delim = ",",
names = c("DIA2", "HT2"))
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT,
delim = ",",
names = c("DIA2", "HT2")) |>
select(DIA_HT, DIA2, HT2)
elm |>
mutate(DIA_HT = paste0(DIA, ",", HT)) |>
separate_wider_delim(DIA_HT,
delim = ",",
names = c("DIA2", "HT2"))
