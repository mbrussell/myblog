legend.position = "none")
p.numloans.big
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me_big <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
sum_me_big
#Total amt to Maine logging businesses
sum_me + (11*350000) + (16*150000)
p.jobs<- ggplot(me, aes(JobsReported, LoanAmount))+
geom_point()+
geom_smooth()+
labs(y = "Loan amount ($)",
x = "Number of jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.jobs
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
all <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp.csv')
me <- all %>%
filter(NAICSCode %in% c(1133, 113310))
mean_me <- me %>%
summarize(mean_loan = mean(LoanAmount),
mean_jobs = mean(JobsReported, na.rm=T))
mean_me
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me_big <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
sum_me_big
#Total amt to Maine logging businesses
sum_me + (11*350000) + (16*150000)
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
me_city_all<- tibble(City = c(me$City, me_big$City))
me_city2 <- me_city_all %>%
mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(CITY) %>%
summarize(n_city = n())
me_city2
me_city3 <- me_city2 %>%
rename(`Number of loans` = n_city) %>%
filter(`Number of loans` >= 5) %>%
arrange(desc(`Number of loans`))
me_city3 %>%
kable("html", caption = 'Number of PPP loans offered to logging businesses in Maine cities.') %>%
kable_styling()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::hugo_version()
blogdown:::new_post_addin()
blogdown:::serve_site()
+ Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
+ Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
+Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
ffo <- tribble(
~Topic, ~Group, ~Pct,
"Age greater than 65", "US population", 13,
"Age greater than 65", "US private forest landowners", 43,
"Men", "US population", 49,
"Men", "US private forest landowners", 79,
"White", "US population", 72,
"White", "US private forest landowners", 95,
"Non-Hispanic", "US population", 84,
"Non-Hispanic", "US private forest landowners", 99,
)
p.ffo <- ggplot(ffo, aes(Topic, Pct,  fill = Group)) +
geom_bar(stat = "identity", position = "dodge",  col = "black") +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
labs(y = "Percentage",
x = " ") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.position = "top",
legend.title = element_blank())
p.ffo
blogdown:::serve_site()
?power.t.test
blogdown:::new_post_addin()
blogdown:::serve_site()
# Load library
library(tidyverse)
# Read in data
graphs<-read.csv('C:/Users/russellm/Documents/Projects/z_Archived/Graphs/graphperception_all.csv')
# Input correct pie graph answers
graphs$Q1B_right<-80
graphs$Q1C_right<-50
graphs$Q1D_right<-15
graphs$Q2B_right<-40
graphs$Q2C_right<-65
graphs$Q2D_right<-25
graphs$Q3B_right<-62.5
graphs$Q3C_right<-12.5
graphs$Q3D_right<-37.5
# Calculate error of pie graph answers
graphs$Q1B_error<-(graphs$Q1B_right-graphs$Q1B)
graphs$Q1C_error<-(graphs$Q1C_right-graphs$Q1C)
graphs$Q1D_error<-(graphs$Q1D_right-graphs$Q1D)
graphs$Q2B_error<-(graphs$Q2B_right-graphs$Q2B)
graphs$Q2C_error<-(graphs$Q2C_right-graphs$Q2C)
graphs$Q2D_error<-(graphs$Q2D_right-graphs$Q2D)
graphs$Q3B_error<-(graphs$Q3B_right-graphs$Q3B)
graphs$Q3C_error<-(graphs$Q3C_right-graphs$Q3C)
graphs$Q3D_error<-(graphs$Q3D_right-graphs$Q3D)
# Make data set of pie graph errors
m1<-as.data.frame(colMeans(graphs))
colnames(m1) <- c("mean_error")
m1$name<-rownames(m1)
m2<-m1[m1$name %in% c("Q1B_error","Q1C_error","Q1D_error",
"Q2B_error","Q2C_error","Q2D_error",
"Q3B_error","Q3C_error","Q3D_error"),]
m2$name2<-substr(rownames(m2),1,3)
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", "Angle"))
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x=name2, y=mean_error,fill=Type))+
geom_bar(stat="identity")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat="identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", " Angle"))
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat="identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
tips2$day <- factor(m2$name2,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
# Plot mean error values
m2$name2 <- factor(m2$name2,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
# Read in data
graphs<-read.csv('C:/Users/russellm/Documents/Projects/z_Archived/Graphs/graphperception_all.csv')
# Input correct pie graph answers
graphs$Q1B_right<-80
graphs$Q1C_right<-50
graphs$Q1D_right<-15
graphs$Q2B_right<-40
graphs$Q2C_right<-65
graphs$Q2D_right<-25
graphs$Q3B_right<-62.5
graphs$Q3C_right<-12.5
graphs$Q3D_right<-37.5
# Calculate error of pie graph answers
graphs$Q1B_error<-(graphs$Q1B_right-graphs$Q1B)
graphs$Q1C_error<-(graphs$Q1C_right-graphs$Q1C)
graphs$Q1D_error<-(graphs$Q1D_right-graphs$Q1D)
graphs$Q2B_error<-(graphs$Q2B_right-graphs$Q2B)
graphs$Q2C_error<-(graphs$Q2C_right-graphs$Q2C)
graphs$Q2D_error<-(graphs$Q2D_right-graphs$Q2D)
graphs$Q3B_error<-(graphs$Q3B_right-graphs$Q3B)
graphs$Q3C_error<-(graphs$Q3C_right-graphs$Q3C)
graphs$Q3D_error<-(graphs$Q3D_right-graphs$Q3D)
# Make data set of pie graph errors
m1<-as.data.frame(colMeans(graphs))
colnames(m1) <- c("mean_error")
m1$name<-rownames(m1)
m2<-m1[m1$name %in% c("Q1B_error","Q1C_error","Q1D_error",
"Q2B_error","Q2C_error","Q2D_error",
"Q3B_error","Q3C_error","Q3D_error"),]
m2$name2<-substr(rownames(m2),1,3)
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", "Angle"))
m2$name2
# Plot mean error values
m2$Type <- factor(m2$Type,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
m1
m2
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
citation("tidyFIA")
# Chunk 1
# Load libraries
library(tidyverse)
library(tidyFIA)
me_data <- tidy_fia(
states = "ME",
table_names = c("plot", "tree", "cond"),
postgis = FALSE
)
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
tree <- me_data[["tree"]] %>% filter(invyr >= 1999)
plot(me_data)
plot(me_data, size = 0.1)
library(spData)
p.me <- plot(me_data, size = 0.1)
nearby_states <- spData::us_states %>%
st_transform(st_crs(ecoreg)) %>%
st_join(ecoreg) %>%
filter(!is.na(SSection))
p.me +
geom_sf(
data = nearby_states,
color = "blue",
alpha = 0
)
nearby_states <- spData::us_states %>%
st_transform(st_crs(ecoreg)) %>%
st_join(ecoreg) %>%
filter(!is.na(SSection))
nearby_states <- spData::us_states %>%
st_transform(st_crs(ecoreg)) %>%
st_join(ecoreg) %>%
filter(!is.na(SSection))
library(spData)
nearby_states <- us_states %>%
st_transform(st_crs(ecoreg)) %>%
st_join(ecoreg) %>%
filter(!is.na(SSection))
p.me +
geom_sf(
data = nearby_states,
color = "blue",
alpha = 0
)
nearby_states <- us_states
nearby_states <- us_states %>%
st_transform(st_crs(ecoreg))
library(tidyFIA)
library(sf)
library(spData)
nearby_states <- us_states %>%
st_transform(st_crs(ecoreg)) %>%
st_join(ecoreg) %>%
filter(!is.na(SSection))
p.me +
geom_sf(
data = nearby_states,
color = "blue",
alpha = 0
)
p.me <- plot(me_data, size = 0.1) +
geom_sf(size = 1)
p.me <- plot(me_data, size = 0.1) +
geom_sf(size = 1)
p.me
p.me <- plot(me_data) +
geom_sf(size = 1)
p.me
p.me <- plot(me_data) +
geom_sf(size = 0.1)
p.me
p.me <- plot(me_data) +
geom_sf(size = 0.1)
p.me
plot2 <- plot %>%
group_by(statecd, countycd, plot) %>%
mutate(rem_id = cumsum())
plot2 <- plot %>%
group_by(statecd, countycd, plot) %>%
mutate(rem_id = cumsum(1))
plot2
View(plot2)
summary(plot2$rem_id)
plot2 <- plot %>%
group_by(statecd, countycd, plot) %>%
mutate(plot_dummy = 1,
rem_id = cumsum(plot_dummy))
summary(plot2$rem_id)
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
mutate(max_rem_id = max(rem_id))
plot2 <- plot %>%
group_by(statecd, countycd, plot) %>%
mutate(plot_dummy = 1,
rem_id = cumsum(plot_dummy))
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
summarize(max_rem_id = max(rem_id))
plot2 <- plot %>%
group_by(statecd, countycd, plot) %>%
mutate(plot_dummy = 1,
rem_id = cumsum(plot_dummy))
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
summarize(max_rem_id = max(rem_id))
View(plot3)
View(plot3)
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
summarize(max_rem_id = mean(rem_id))
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
summarize(max_rem_id = max(rem_id))
View(plot3)
plot4 <- inner_join(plot3, plot2)
p.me <- plot(me_data) +
geom_point(size = 0.1)
p.me
p.me <- plot(me_data) +
geom_point(size = 8)
p.me
plot <- me_data[["plot"]] %>% filter(plot_status_cd == 1 & invyr >= 1999)
p.me <- plot(me_data)
p.me
p.me <- plot(me_data) +geom_sf(col = "blue")
p.me
View(tree)
head(tree)
# Chunk 2
library(tidyFIA)
# Chunk 3
library(sf)
library(spData)
library(knitr)
library(kableExtra)
library(tidycensus)
library(urbnmapr)
# Chunk 4
me_data <- tidy_fia(
states = "ME",
table_names = c("plot", "tree", "cond"),
postgis = FALSE
)
# Chunk 5
p.me <- plot(me_data)
p.me
# Chunk 6
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
tree <- me_data[["tree"]] %>% filter(invyr >= 1999)
# Chunk 7
plot_stats <- tree %>%
group_by(plt_cn) %>%
filter(statuscd == 1) %>%
summarize(
bapa = sum(tpa_unadj * 0.005454 * dia ^ 2, na.rm = TRUE),
cpa =  sum(tpa_unadj * carbon_ag, na.rm = TRUE)
) %>%
full_join(
plot %>% select(cn, statecd, unitcd, countycd, plot, invyr),
by = c("plt_cn" = "cn")
) %>%
mutate(cpa_tons = cpa /2000) %>%
replace_na(replace = list(bapa = 0, cpa = 0))
# Chunk 8
p.carbon <- ggplot(plot_stats, aes(x = bapa, y = cpa_tons)) +
geom_point() +
labs (x = "Basal area (sq. ft per acre)",
y = "Aboveground carbon (tons per acre)")
p.carbon
# Chunk 9
ref_species <- read_ref_table("REF_SPECIES") %>%
select(spcd, common_name)
common_spp <- me_data[["tree"]] %>%
group_by(spcd) %>%
tally %>%
top_n(6, wt = n) %>%
pull(spcd)
me_data[["tree"]] %>%
filter(spcd %in% common_spp) %>%
left_join(ref_species) %>%
ggplot(aes(x = dia, y = carbon_ag)) +
geom_point(alpha = 0.2) +
facet_wrap(~ common_name) +
labs (x = "Tree diameter (inches)",
y = "Aboveground carbon (pounds)")
# Chunk 10
plot2 <- plot_stats %>%
group_by(statecd, countycd, plot) %>%
mutate(plot_dummy = 1,
rem_id = cumsum(plot_dummy))
plot3 <- plot2 %>%
group_by(statecd, countycd, plot) %>%
summarize(max_rem_id = max(rem_id))
plot4 <- inner_join(plot3, plot2) %>%
filter(rem_id == max_rem_id)
remotes::install_github("SilviaTerra/tidyFIA")
library(tidyFIA)
library(sf)
library(spData)
library(knitr)
library(kableExtra)
library(tidycensus)
library(urbnmapr)
me_data <- tidy_fia(
states = "ME",
table_names = c("plot", "tree", "cond"),
postgis = FALSE
)
remotes::install_github("SilviaTerra/tidyFIA")
library(tidyFIA)
library(sf)
library(spData)
library(knitr)
library(kableExtra)
library(tidycensus)
library(urbnmapr)
me_data <- tidy_fia(
states = "ME",
table_names = c("plot", "tree", "cond"),
postgis = FALSE
)
p.me <- plot(me_data)
p.me
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
tree <- me_data[["tree"]] %>% filter(invyr >= 1999)
me_data[["plot"]]
me_data[["cond"]]
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
plot <- me_data[["plot"]]
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
plot <- me_data[["plot"]]
plot <- plot %>% filter(invyr >= 1999)
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
plot <- as.numeric(me_data[["plot"]]) %>% filter(invyr >= 1999)
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
cond
cond <- me_data[["cond"]]
View(cond)
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
remotes::install_github('rstudio/blogdown')
installed.packages("xfun")
install.packages("xfun")
# Chunk 2
library(tidyFIA)
# Chunk 3
library(sf)
library(spData)
library(knitr)
library(kableExtra)
library(tidycensus)
library(urbnmapr)
# Chunk 4
me_data <- tidy_fia(
states = "ME",
table_names = c("plot", "tree", "cond"),
postgis = FALSE
)
# Chunk 5
p.me <- plot(me_data)
p.me
# Chunk 6
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
cond <- me_data[["cond"]] %>% filter(invyr >= 1999)
tree <- me_data[["tree"]] %>% filter(invyr >= 1999)
plot <- me_data[["PLOT"]] %>% filter(invyr >= 1999)
plot <- me_data[["plot"]] %>% filter(invyr >= 1999)
