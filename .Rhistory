sum_sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(count > 3) %>%
ggplot(aes(x = reorder(Theme, mean_sentiment), y = (mean_sentiment),
fill = mean_sentiment > 0)) +
geom_bar(stat = "identity",  color = "black", alpha = 0.8) +
coord_flip()+
scale_y_continuous(limits = c(-1.5, 1.5)) +
labs(x = "Theme of comments",
y = "Mean sentiment (-5 to 5 scale") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
legend.position = "none")
library(googlesheets4)
library(tidyverse)
library(tidytext)
library(textdata)
library(janeaustenr)
library(stringr)
library(knitr)
library(formattable)
library(kableExtra)
text_logger <- logger %>%
mutate(comment_id = seq.int(nrow(logger))) %>%
unnest_tokens(word, Comment)
#nrc
nrc_cats
nrc_anger <- get_sentiments("nrc") %>%
filter(sentiment == "trust")
text_logger %>%
inner_join(nrc_anger) %>%
count(word, sort = TRUE)
#bing
bing_neg <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bing_neg <- text_logger %>%
inner_join(bing) %>%
count(word, sort = TRUE)
bing_neg
bing_pos <- get_sentiments("bing") %>%
filter(sentiment == "positive")
bing_pos <- text_logger %>%
inner_join(bing_pos) %>%
count(word, sort = TRUE)
bing_pos
bing_pos_show %>%
arrange(-n) %>%
kable("html", caption = 'Frequency of 10 most positive words in logger comments.') %>%
kable_styling()
#### KABLE of positive/negative words####
bing_pos_show <- bing_pos[,] %>%
head(10)
bing_pos_show %>%
arrange(-n) %>%
kable("html", caption = 'Frequency of 10 most positive words in logger comments.') %>%
kable_styling()
#### KABLE of positive/negative words####
bing_neg_show <- bing_neg[,] %>%
head(10)
bing_neg_show %>%
arrange(-n) %>%
kable("html", caption = 'Frequency of 10 most negative words in logger comments.') %>%
kable_styling()
# afinn
afinn <- text_logger %>%
inner_join(get_sentiments("afinn")) %>%
group_by(comment_id) %>%
summarize(count = n(),
mean_sentiment = mean(value),
sum_sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(count >5)
text_logger %>%
inner_join(get_sentiments("bing")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)
text_logger %>%
inner_join(get_sentiments("nrc")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)
text_logger %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Theme) %>%
summarize(count = n(),
mean_sentiment = mean(value),
sum_sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(count > 3) %>%
ggplot(aes(x = reorder(Theme, mean_sentiment), y = (mean_sentiment),
fill = mean_sentiment > 0)) +
geom_bar(stat = "identity",  color = "black", alpha = 0.8) +
coord_flip()+
scale_y_continuous(limits = c(-1.5, 1.5)) +
labs(x = "Theme of comments",
y = "Mean sentiment (-5 to 5 scale)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
legend.position = "none")
text_logger %>%
inner_join(get_sentiments("bing")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)
text_logger %>%
inner_join(get_sentiments("bing")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)+
labs(x = "Logger ID",
y = "Number of words") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
text_logger %>%
inner_join(get_sentiments("nrc")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
text_logger %>%
inner_join(get_sentiments("nrc")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)+
labs(x = "Logger ID",
y = "Number of words") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
text_logger %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Theme) %>%
summarize(count = n(),
mean_sentiment = mean(value),
sum_sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(count > 3) %>%
ggplot(aes(x = reorder(Theme, mean_sentiment), y = (mean_sentiment),
fill = mean_sentiment > 0)) +
geom_bar(stat = "identity",  color = "black", alpha = 0.8) +
coord_flip()+
scale_y_continuous(limits = c(-1.5, 1.5)) +
labs(x = "Theme of comments",
y = "Mean sentiment (-5 to 5 scale)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
legend.position = "none")
text_logger %>%
inner_join(get_sentiments("afinn")) %>%
group_by(Theme) %>%
summarize(count = n(),
mean_sentiment = mean(value),
sum_sentiment = sum(value))
# afinn
afinn <- text_logger %>%
inner_join(get_sentiments("afinn")) %>%
group_by(comment_id) %>%
summarize(count = n(),
mean_sentiment = mean(value),
sum_sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(count >5)
text_logger %>%
inner_join(get_sentiments("bing")) %>%
group_by(index = comment_id, Theme, sentiment) %>%
summarize(n = n()) %>%
ggplot(aes(x = index, y = n, fill = Theme)) +
geom_bar(stat = "identity", alpha = 0.8) +
facet_wrap(~ sentiment, ncol = 5)+
labs(x = "Logger ID",
y = "Number of words") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
blogdown:::serve_site()
blogdown:::serve_site()
bing_pos_show <- bing_pos[,] %>%
head(10)
bing_pos_show %>%
arrange(-n) %>%
kable("html", caption = 'Frequency of 10 most positive words in logger comments.') %>%
kable_styling()
library(googlesheets4)
library(tidyverse)
library(tidytext)
library(textdata)
library(janeaustenr)
library(stringr)
library(knitr)
library(formattable)
library(kableExtra)
logger <- read_sheet("https://drive.google.com/open?id=1nxAZixhhQ-zUDaM9BFyIpunILDnq0CG91Wc5P--1gOI")
nrc_cats <- get_sentiments("nrc") %>%
group_by(sentiment) %>%
summarize(num_words = n())
bing_cats <- get_sentiments("bing") %>%
group_by(sentiment) %>%
summarize(num_words = n())
afinn_cats <- get_sentiments("afinn") %>%
group_by(value) %>%
summarize(num_words = n())
text_logger <- logger %>%
mutate(comment_id = seq.int(nrow(logger))) %>%
unnest_tokens(word, Comment)
#nrc
#nrc_cats
nrc_anger <- get_sentiments("nrc") %>%
filter(sentiment == "trust")
text_logger %>%
inner_join(nrc_anger) %>%
count(word, sort = TRUE)
#bing
bing_neg <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bing_neg <- text_logger %>%
inner_join(bing_neg) %>%
count(word, sort = TRUE)
#bing_neg
bing_pos <- get_sentiments("bing") %>%
filter(sentiment == "positive")
bing_pos <- text_logger %>%
inner_join(bing_pos) %>%
count(word, sort = TRUE)
#bing_pos
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
blogdown:::new_post_addin()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
blogdown:::new_post_addin()
update.packages()
# Chunk 1
library(tidyverse)
library(lubridate)
library(knitr)
library(formattable)
library(kableExtra)
library(patchwork)
# Chunk 2
fia <- read_csv("C://Users//russellm//Downloads//PLOT.csv")
inv <- read_csv("C://Users//russellm//Documents//Projects//Data//FIA//ANN_INV_START.csv")
fia2 <- fia %>%
inner_join(inv) %>%
mutate(MONNAME =  as.character(month(ymd(010101) + months(MEASMON-1),label=TRUE,abbr=TRUE)))
fia.sum <- fia2 %>%
group_by(MONNAME, MEASMON) %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & MEASYEAR >= ANN_INV_START) %>%
summarize(`Number of measurements` = n())
fia.sum
fia.sum %>%
arrange(MEASMON) %>%
kable("html", caption = 'Number of FIA plot measurements in each month.') %>%
kable_styling()
fia.sum.reg <- fia2 %>%
group_by(REGION_NAME, MONNAME, MEASMON) %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START) %>%
summarize(n.month = n())
fia.sum.reg
p.fia <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START) %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Number of FIA plot measurements in each month",
subtitle = "Minimum of 12,796 in Dec; maximum of 22,836 in June") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
p.fia
p.fia <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START) %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Number of FIA plot measurements in each month",
subtitle = "Minimum of 12,796 in Dec; maximum of 22,836 in June") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
p.fia
p.fia.se <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Southeast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Southeast ") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
p.fia.nc <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "North-Central") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "North Central") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
p.fia.ne <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Northeast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Northeast") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
p.fia.rm <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Rocky Mountian") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Rocky Mountain") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
p.fia.west <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "West Coast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "West Coast") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black", size = 14),
axis.ticks = element_blank())
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm | p.fia.west)
p.fia.se <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Southeast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Southeast ") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
p.fia.nc <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "North-Central") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "North Central") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
p.fia.ne <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Northeast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Northeast") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
p.fia.rm <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "Rocky Mountian") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "Rocky Mountain") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
p.fia.west <- fia2 %>%
filter(PLOT_STATUS_CD == 1 & !is.na(MEASMON) & INVYR >= ANN_INV_START &
REGION_NAME == "West Coast") %>%
arrange(MEASMON) %>%
ggplot(aes(x = reorder(factor(MONNAME), MEASMON), fill = MONNAME)) +
geom_bar(width = 1, color = "black") +
coord_polar() +
scale_color_brewer(palette = "Blues") +
labs(x = " ",
y = " ",
title = "West Coast") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "white"),
legend.position = "none",
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
axis.ticks = element_blank())
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm | p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm) /
(p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm) /
(p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm) /
(p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm | p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm) /
(p.fia.west)
(p.fia.se | p.fia.nc) /
(p.fia.ne | p.fia.rm | p.fia.west)
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
![*Clustering can be used to identify logger needs for new harvesting equipment based on their years in operation and the age of the equipment they currently use.*](/post/using-clustering-with-logging-industry-data/loggerEqpt.png){width=400px}
