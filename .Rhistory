library(tidyverse)
library(lubridate)
library(tidycensus)
library(urbnmapr)
library(readxl)
library(devtools)
library(usmap)
library(patchwork)
library(maps)
library(kableExtra)
# Chunk 2
# Data from: https://data.census.gov/cedsci/table?q=house%20heating%20fuel%20by%20state&tid=ACSDT1Y2010.B25040&moe=false
fuel <- read_csv("C://Users//matt//Documents//Arbor//Projects//Blog//fuel.csv") %>%
pivot_longer(Alabama:`Puerto Rico`, names_to = "State", values_to = "n_homes")
# Chunk 3
fuel_2021 <- fuel %>%
filter(Type == "Total:" & Year == 2021)
fuel_2021_wood <- fuel %>%
filter(Type == "Wood" & Year == 2021)
# Chunk 4
fuel_summ <- fuel %>%
filter(!Type == "Total:") %>%
group_by(State, Year) %>%
mutate(Pct = n_homes / sum(n_homes) * 100)
sum(fuel_2021$n_homes)
fuel_summ2 <- fuel_2021 %>%
group_by(Type) %>%
mutate(sum_homes = sum(n_homes) * 100)
# Chunk 1
library(tidyverse)
library(lubridate)
library(tidycensus)
library(urbnmapr)
library(readxl)
library(devtools)
library(usmap)
library(patchwork)
library(maps)
library(kableExtra)
# Chunk 2
# Data from: https://data.census.gov/cedsci/table?q=house%20heating%20fuel%20by%20state&tid=ACSDT1Y2010.B25040&moe=false
fuel <- read_csv("C://Users//matt//Documents//Arbor//Projects//Blog//fuel.csv") %>%
pivot_longer(Alabama:`Puerto Rico`, names_to = "State", values_to = "n_homes")
# Chunk 3
fuel_2021 <- fuel %>%
filter(Type == "Total:" & Year == 2021)
fuel_2021_wood <- fuel %>%
filter(Type == "Wood" & Year == 2021)
# Chunk 4
fuel_summ <- fuel %>%
filter(!Type == "Total:") %>%
group_by(State, Year) %>%
mutate(Pct = n_homes / sum(n_homes) * 100)
sum(fuel_2021$n_homes)
fuel_summ2 <- fuel_2021 %>%
group_by(Type) %>%
mutate(sum_homes = sum(n_homes) * 100)
# Chunk 5
states_map <- map_data("state")
fuel_map <- fuel_summ %>%
mutate(region = tolower(State)) %>%
filter(!State %in% c("Puerto Rico", "District of Columbia") &
Year == 2021 &
Type == "Wood")
fuel_map2 <- inner_join(states_map, fuel_map)
p.map <-  ggplot(fuel_map2, mapping = aes(long, lat, group = group,
fill = Pct)) +
geom_polygon(color = "black", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
scale_fill_gradient(name="Homes heated \nwith wood (%)", low="white", high="red") +
labs(caption = "Source: American Community Survey , 2021") +
theme(panel.background = element_rect(fill = "NA"),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
legend.position = c(0.9, 0.4))
p.map
# Chunk 6
fuel_map_trim <- fuel_map %>%
ungroup() %>%
select(State, n_homes, Pct) %>%
rename(Number = n_homes ,
Percent = Pct) %>%
mutate(Percent = round(Percent, 1))
fuel_map_trim[order(fuel_map_trim$Percent, decreasing=TRUE),] %>%
kbl(caption = "Number and percentage of homes that heat with wood, 2021.") %>%
kable_paper("hover", full_width = F)
# Chunk 7
fuel_wood <- fuel %>%
filter(Type == "Wood")
fuel_wood_all <- fuel_wood %>%
group_by(Year) %>%
summarize(num_homes = sum(n_homes))
p.wood <- ggplot(fuel_wood_all, aes(x = Year, y = num_homes/1000000)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Number of US homes that heat with wood (millions)",
caption = "Source: American Community Survey data, 2010-2021") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
p.wood
# Chunk 8
fuel_solar <- fuel %>%
filter(Type == "Solar energy")
fuel_solar_all <- fuel_solar %>%
group_by(Year) %>%
summarize(num_homes = sum(n_homes))
p.solar <- ggplot(fuel_solar_all, aes(x = Year, y = num_homes/1000000)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Number of US homes heated with solar (millions)",
caption = "Source: American Community Survey, 2010-2021") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"))
# Chunk 9
fuel_summ_wood <- fuel_summ %>%
filter(Type == "Wood" & Year %in% c(2011, 2021)) %>%
pivot_wider(id_cols = State, names_from = Year, values_from = Pct, values_fill = 0) %>%
mutate(pct_diff = `2021`-`2011`)
fuel_all <- fuel %>%
filter(!Type == "Total:")
fuel_all <- fuel_all %>%
group_by(Type, Year) %>%
summarize(num_homes = sum(n_homes))
fuel_all2 <- fuel_all %>%
group_by(Year) %>%
mutate(Pct = num_homes / sum(num_homes) * 100)
fuel_all3 <- fuel_all2 %>%
group_by(Year) %>%
summarize(sum_all = sum(Pct))
p.all <- ggplot(fuel_all2, aes(x = Year, y = Pct, col = Type)) +
geom_point() +
geom_line() +
facet_wrap(~Type, ncol = 3) +
labs(x = "Year",
y = "Percent of US homes by home heating type",
caption = "Source: American Community Survey, 2010-2021") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
legend.position = "none")
p.all
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
# Chunk 1
library(tidyverse)
library(lubridate)
library(tidycensus)
library(urbnmapr)
library(readxl)
library(devtools)
library(usmap)
library(patchwork)
library(maps)
library(kableExtra)
# Chunk 2
# Data from: https://data.census.gov/cedsci/table?q=house%20heating%20fuel%20by%20state&tid=ACSDT1Y2010.B25040&moe=false
fuel <- read_csv("C://Users//matt//Documents//Arbor//Projects//Blog//fuel.csv") %>%
pivot_longer(Alabama:`Puerto Rico`, names_to = "State", values_to = "n_homes")
# Chunk 3
fuel_2021 <- fuel %>%
filter(Type == "Total:" & Year == 2021)
fuel_2021_wood <- fuel %>%
filter(Type == "Wood" & Year == 2021)
# Chunk 4
fuel_summ <- fuel %>%
filter(!Type == "Total:") %>%
group_by(State, Year) %>%
mutate(Pct = n_homes / sum(n_homes) * 100)
sum(fuel_2021$n_homes)
fuel_summ2 <- fuel_2021 %>%
group_by(Type) %>%
mutate(sum_homes = sum(n_homes) * 100)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
chrips
chirps
library(tidyverse)
library(infer)
library(stats4nr)
chirps
t.test(chirps$cps, mu = 18)
chirps %>%
specify(response = cps)
chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 40)
chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
calculate(stat = "mean")
chirps %>%
specify(response = cps) %>%
calculate(stat = "mean")
chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
t_test(chirps, response = cps, mu = 18)
t.test(chirps$cps, mu = 18)
t_test(chirps, response = cps, mu = 18)
Chirps_test <- chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
Chirps_test
Chirps_test <- chirps %>%
specify(response = cps) %>%
# hypothesize(null = "point", mu = 18) %>%
# generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
Chirps_test
Chirps_null_dist <- chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
Chirps_null_dist
Chirps_null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "two-sided")
Chirps_null_dist <- chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
Chirps_null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "two-sided")
Chirps_null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "two-sided")
chirps_null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "two-sided")
chirps_null_dist <- chirps %>%
specify(response = cps) %>%
hypothesize(null = "point", mu = 18) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
chirps_null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "two-sided")
observed_test_stat <- chirps %>%
specify(response = cps) %>%
calculate(stat = "mean")
chirps_null_dist %>%
visualize() +
shade_p_value(observed_test_stat,
direction = "two-sided")
t_test(chirps, response = cps, mu = 18)
ggplot(chirps, aes(x = cps)) +
geom_histogram()
ggplot(chirps, aes(x = cps)) +
geom_bar()
ggplot(chirps, aes(x = cps)) +
geom_histogram(bins = 4)
ggplot(chirps, aes(x = cps)) +
geom_histogram(bins = 10)
ggplot(chirps, aes(x = cps)) +
geom_histogram(bins = 20)
ggplot(chirps, aes(x = cps)) +
geom_histogram(bins = 15)
ggplot(chirps, aes(x = cps)) +
geom_boxplot()
ggplot(chirps, aes(x = cps)) +
geom_boxplot() +
labs(x = "Chirps per second")
ggplot(chirps, aes(cps)) +
geom_boxplot() +
labs(x = "Chirps per second")
iron <- iron %>%
mutate(depth.fact = as.factor(depth))
iron.aov <- lm(iron ~ depth.fact, data = iron)
anova(iron.aov)
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
observed_f_stat
iron_null_dist <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "F")
iron_null_dist
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
observed_f_stat
iron_null_dist %>%
visualize() +
shade_p_value(observed_f_statistic,
direction = "greater")
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
observed_f_stat
iron_null_dist %>%
visualize() +
shade_p_value(observed_f_stat,
direction = "greater")
iron_null_dist <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
observed_f_stat
iron_null_dist %>%
visualize() +
shade_p_value(observed_f_stat,
direction = "greater")
ggplot(iron, aes(factor(depth), iron)) +
geom_boxplot()+
ylab("Iron content (mg/L)") +
xlab("Water depth (feet)")
iron.aov <- lm(iron ~ depth.fact, data = iron)
anova(iron.aov)
iron_null_dist <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
iron_null_dist
p_value <- iron_null_dist %>%
get_p_value(obs_stat = observed_f_stat,
direction = "greater")
p_value
iron_null_dist <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
generate(reps = 200, type = "permute") %>%
calculate(stat = "F")
p_value <- iron_null_dist %>%
get_p_value(obs_stat = observed_f_stat,
direction = "greater")
p_value
?get_p_value
iron_null_dist %>%
get_p_value(obs_stat = observed_f_stat,
direction = "greater")
observed_f_stat
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
observed_f_stat
iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
iron_null_dist %>%
visualize() +
shade_p_value(observed_f_stat,
direction = "greater")
visualize(iron_null_dist) +
shade_p_value(observed_f_statistic,
direction = "greater")
visualize(iron_null_dist) +
shade_p_value(observed_f_stat,
direction = "greater")
blogdown:::serve_site()
observed_f_stat <- iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
iron_null_dist %>%
get_p_value(obs_stat = observed_f_stat,
direction = "greater")
iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
iron %>%
specify(iron ~ depth.fact) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
carb <- read_csv("C://Users//matt//Documents//Arbor//Data//CARB carbon price.csv")
carb <- carb %>%
mutate(Date2 = as.Date(Date, "%m/%d/%Y")) %>%
drop_na(Date2)
min <- as.Date("2017-10-01")
max <- as.Date("2022-12-31")
ggplot(carb, aes(Date2, Price, col = Auction))+
scale_color_manual(values=c("darkgreen", "brown"))+
geom_point(size = 2) +
geom_line() +
scale_x_date(date_labels = "%m-%Y", date_breaks  ="3 month") +
labs(x = "Date", y = "Price ($USD)",
title = "California ARB carbon price allowances, 2018-2022 ",
subtitle = "Price per metric tonne of carbon",
caption = "Source: California ARB Auction Notices and Reports")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent"))
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
# Chunk 1
library(tidyverse)
# Chunk 2
stumpage <- read_csv("C://Users//matt//Documents//Arbor//Projects//Seven Islands//me_stumpage.csv")
# Chunk 3
stumpage_all <- stumpage %>%
filter(County == "*Statewide*")
p.stumpage <- ggplot(stumpage_all, aes(x = reorder(Species, Avg), y = Avg, fill = factor(Year))) +
geom_bar(stat = "identity", position = "dodge", col = "black") +
scale_fill_brewer(palette="GnBu") +
#facet_wrap(~County, ncol=2) +
coord_flip() +
labs(x = "Species",
y = "Sawlog price ($USD per MBF)",
caption = "Source: Maine Forest Service, 2020 stumpage price report") +
theme(panel.background = element_rect(fill = "NA"),
axis.text.x = element_text(angle = 0, hjust = 0),
legend.title = element_blank())
p.stumpage
stumpage_all <- stumpage %>%
filter(County == "*Statewide*")
p.stumpage <- ggplot(stumpage_all, aes(x = reorder(Species, Avg), y = Avg, fill = factor(Year))) +
geom_bar(stat = "identity", position = "dodge", col = "black") +
scale_fill_brewer(palette="GnBu") +
#facet_wrap(~County, ncol=2) +
coord_flip() +
labs(x = " ",
y = "Sawlog price ($USD per MBF)",
caption = "Source: Maine Forest Service, 2020 stumpage price report") +
theme(panel.background = element_rect(fill = "NA"),
axis.text.x = element_text(angle = 0, hjust = 0),
legend.title = element_blank())
p.stumpage
stumpage_all_2020 <- stumpage %>%
filter(Year == 2020)
p.stumpage.range <- ggplot(stumpage_all_2020, aes(x = Species, y = Avg)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = Min, ymax = Max), width = 0.25) +
facet_wrap(~County, ncol=4) +
coord_flip() +
scale_fill_brewer(palette="GnBu") +
labs(x = "Species",
y = "Sawlog price ($USD per MBF)",
subtitle = "Mean sawtimber price +/- min max value reported",
caption = "Source: Maine Forest Service, 2020 stumpage price report") +
theme(panel.background = element_rect(fill = "NA"),
axis.text.x = element_text(angle = 45, hjust = 1))
p.stumpage.range
blogdown:::serve_site()
p.stumpage.range <- ggplot(stumpage_all_2020, aes(x = Species, y = Avg)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = Min, ymax = Max), width = 0.25) +
facet_wrap(~County, ncol=4) +
coord_flip() +
scale_fill_brewer(palette="GnBu") +
labs(x = "Species",
y = "Sawlog price ($USD per MBF)",
subtitle = "Mean sawtimber price +/- min max value reported",
caption = "Source: Maine Forest Service, 2020 stumpage price report") +
theme(panel.background = element_rect(fill = "NA"),
axis.text.y = element_text(size = 6))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
