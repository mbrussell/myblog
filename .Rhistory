knitr::kable((all_data[,1:4]),
caption = 'Example datasets') %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
# Chunk 1
library(tidyverse)
library(googlesheets4)
library(knitr)
library(formattable)
library(kableExtra)
options(kableExtra.auto_format = FALSE)
# Chunk 2
# Here is the function:
total_AGB<-function(SPGRP_JENKINS,DIA){
if(SPGRP_JENKINS=='Aspen')
{JENKINS_TOTAL_B1=-2.2094; JENKINS_TOTAL_B2=2.3867}
if(SPGRP_JENKINS=='Cedar/larch')
{JENKINS_TOTAL_B1=-2.0336; JENKINS_TOTAL_B2=2.2592}
if(SPGRP_JENKINS=='Maple/oak/hickory/beech')
{JENKINS_TOTAL_B1=-2.0127; JENKINS_TOTAL_B2=2.4342}
if(SPGRP_JENKINS=='Mixed hardwood')
{JENKINS_TOTAL_B1=-2.48; JENKINS_TOTAL_B2=2.4835}
if(SPGRP_JENKINS=='Pine')
{JENKINS_TOTAL_B1=-2.5356; JENKINS_TOTAL_B2=2.4349}
if(SPGRP_JENKINS=='Soft maple/birch')
{JENKINS_TOTAL_B1=-1.9123; JENKINS_TOTAL_B2=2.3651}
if(SPGRP_JENKINS=='Spruce')
{JENKINS_TOTAL_B1=-2.0773; JENKINS_TOTAL_B2=2.3323}
if(SPGRP_JENKINS=='True fir/hemlock')
{JENKINS_TOTAL_B1=-2.5384; JENKINS_TOTAL_B2=2.4814}
# Calculate total aboveground biomass of each tree (AGB)
# Note the equation predicts biomass in kg, but we  convert it into pounds
AGB=(exp(JENKINS_TOTAL_B1+JENKINS_TOTAL_B2*log(DIA*2.54)))*2.20462
return(AGB=AGB)}
# Chunk 3
#Read in datasets
# tree carbon
tree <- read_sheet("https://docs.google.com/spreadsheets/d/1sjRe8pi08C4jY8TlDBeRKxmhqMlo85eB5wmqNovsiOU/edit?usp=sharing")
# wood carbon
wood2021 <- read_sheet("https://docs.google.com/spreadsheets/d/1ekdnxAnmO0PfVAmA-aZ1j6lNdwNKMGz7WLK1vBttmtA/edit?usp=sharing")
PLOT_SIZE = 10
wood2021$AGB1<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH1)
wood2021$C1<-wood2021$AGB1*0.5
wood2021$C_sum1<-wood2021$C1*PLOT_SIZE
wood2021$AGB2<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH2)
wood2021$C2<-wood2021$AGB2*0.5
wood2021$C_sum2<-wood2021$C2*PLOT_SIZE
plot.C <- wood2021 %>%
group_by(Team) %>%
summarize(CPA1 = sum(C_sum1),
CPA2 = sum(C_sum2))
plot.C$CO2e1 <- plot.C$CPA1 * 3.667
plot.C$tons1 <- plot.C$CPA1 / 2000
# elm
elm <- read_csv('C:/Users/russellm/Documents/Projects/SNRAwR/SNRAwR/Data/elm.csv')
# State Carbon (MMT) in 2019
carbon_state <- c(1238,
1288,
1407,
1041,
1157,
233,
1437,
1470,
888,
1041,
835,
165,
346,
1102,
368,
176,
191,
1596,
325,
215,
1911,
3186,
473,
1162,
992,
3044,
873,
481,
610,
657,
1533,
1215,
2706,
1726,
38,
1429,
91,
35,
277,
48,
1707,
522,
110,
705,
622,
1867,
1224,
458)
# iris
# iris$Petal.Length
# iris$Sepal.Width
# Chunk 4
sd_apx <- function(min, max){
sd_hat = (max-min)/4
return(sd_hat)
}
# Chunk 5
Dataset <- c("carbon",
"carbon",
"elm",
"elm",
"elm",
"state_carbon",
"iris",
"iris",
"CO2",
"CO2")
Variable <- c("DBH",
"Tons",
"DIA",
"HT",
"CROWN_DIAM_WIDE",
"MMT/100",
"Petal.Length",
"Sepal.Width",
"conc/100",
"uptake")
SD_true <- c(round(sd(tree$DBH1),1),
round(sd(plot.C$tons1),1),
round(sd(elm$DIA),1),
round(sd(elm$HT),1),
round(sd(elm$CROWN_DIAM_WIDE),1),
round(sd(carbon_state/100),1),
round(sd(iris$Petal.Length),1),
round(sd(iris$Sepal.Width),1),
round(sd(CO2$conc/100),1),
round(sd(CO2$uptake),1))
SD_apxx <- c(round(sd_apx(min = min(tree$DBH1), max = max(tree$DBH1)),1),
sd_apx(min = min(plot.C$tons1), max = max(plot.C$tons1)),
sd_apx(min = min(elm$DIA), max = max(elm$DIA)),
sd_apx(min = min(elm$HT), max = max(elm$HT)),
sd_apx(min = min(elm$CROWN_DIAM_WIDE), max = max(elm$CROWN_DIAM_WIDE)),
sd_apx(min = min(carbon_state/100), max = max(carbon_state/100)),
sd_apx(min = min(iris$Petal.Length), max = max(iris$Petal.Length)),
sd_apx(min = min(iris$Sepal.Width), max = max(iris$Sepal.Width)),
sd_apx(min = min(CO2$conc/100), max = max(CO2$conc/100)),
sd_apx(min = min(CO2$uptake), max = max(CO2$uptake)))
all_data <- tibble(data_set, Variable, sd_true, sd_apxx)
all_data <- all_data %>%
mutate(`Percent different` = ((sd_true-sd_apxx)/sd_true)*100)
# Chunk 6
knitr::kable((all_data[,1:4]),
caption = 'Example datasets') %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
SD_true
# Chunk 1
library(tidyverse)
library(googlesheets4)
library(knitr)
library(formattable)
library(kableExtra)
options(kableExtra.auto_format = FALSE)
# Chunk 2
# Here is the function:
total_AGB<-function(SPGRP_JENKINS,DIA){
if(SPGRP_JENKINS=='Aspen')
{JENKINS_TOTAL_B1=-2.2094; JENKINS_TOTAL_B2=2.3867}
if(SPGRP_JENKINS=='Cedar/larch')
{JENKINS_TOTAL_B1=-2.0336; JENKINS_TOTAL_B2=2.2592}
if(SPGRP_JENKINS=='Maple/oak/hickory/beech')
{JENKINS_TOTAL_B1=-2.0127; JENKINS_TOTAL_B2=2.4342}
if(SPGRP_JENKINS=='Mixed hardwood')
{JENKINS_TOTAL_B1=-2.48; JENKINS_TOTAL_B2=2.4835}
if(SPGRP_JENKINS=='Pine')
{JENKINS_TOTAL_B1=-2.5356; JENKINS_TOTAL_B2=2.4349}
if(SPGRP_JENKINS=='Soft maple/birch')
{JENKINS_TOTAL_B1=-1.9123; JENKINS_TOTAL_B2=2.3651}
if(SPGRP_JENKINS=='Spruce')
{JENKINS_TOTAL_B1=-2.0773; JENKINS_TOTAL_B2=2.3323}
if(SPGRP_JENKINS=='True fir/hemlock')
{JENKINS_TOTAL_B1=-2.5384; JENKINS_TOTAL_B2=2.4814}
# Calculate total aboveground biomass of each tree (AGB)
# Note the equation predicts biomass in kg, but we  convert it into pounds
AGB=(exp(JENKINS_TOTAL_B1+JENKINS_TOTAL_B2*log(DIA*2.54)))*2.20462
return(AGB=AGB)}
# Chunk 3
#Read in datasets
# tree carbon
tree <- read_sheet("https://docs.google.com/spreadsheets/d/1sjRe8pi08C4jY8TlDBeRKxmhqMlo85eB5wmqNovsiOU/edit?usp=sharing")
# wood carbon
wood2021 <- read_sheet("https://docs.google.com/spreadsheets/d/1ekdnxAnmO0PfVAmA-aZ1j6lNdwNKMGz7WLK1vBttmtA/edit?usp=sharing")
PLOT_SIZE = 10
wood2021$AGB1<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH1)
wood2021$C1<-wood2021$AGB1*0.5
wood2021$C_sum1<-wood2021$C1*PLOT_SIZE
wood2021$AGB2<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH2)
wood2021$C2<-wood2021$AGB2*0.5
wood2021$C_sum2<-wood2021$C2*PLOT_SIZE
plot.C <- wood2021 %>%
group_by(Team) %>%
summarize(CPA1 = sum(C_sum1),
CPA2 = sum(C_sum2))
plot.C$CO2e1 <- plot.C$CPA1 * 3.667
plot.C$tons1 <- plot.C$CPA1 / 2000
# elm
elm <- read_csv('C:/Users/russellm/Documents/Projects/SNRAwR/SNRAwR/Data/elm.csv')
# State Carbon (MMT) in 2019
carbon_state <- c(1238,
1288,
1407,
1041,
1157,
233,
1437,
1470,
888,
1041,
835,
165,
346,
1102,
368,
176,
191,
1596,
325,
215,
1911,
3186,
473,
1162,
992,
3044,
873,
481,
610,
657,
1533,
1215,
2706,
1726,
38,
1429,
91,
35,
277,
48,
1707,
522,
110,
705,
622,
1867,
1224,
458)
# iris
# iris$Petal.Length
# iris$Sepal.Width
# Chunk 4
sd_apx <- function(min, max){
sd_hat = (max-min)/4
return(sd_hat)
}
# Chunk 5
Dataset <- c("carbon",
"carbon",
"elm",
"elm",
"elm",
"state_carbon",
"iris",
"iris",
"CO2",
"CO2")
Variable <- c("DBH",
"Tons",
"DIA",
"HT",
"CROWN_DIAM_WIDE",
"MMT/100",
"Petal.Length",
"Sepal.Width",
"conc/100",
"uptake")
SD_true <- c(round(sd(tree$DBH1),1),
round(sd(plot.C$tons1),1),
round(sd(elm$DIA),1),
round(sd(elm$HT),1),
round(sd(elm$CROWN_DIAM_WIDE),1),
round(sd(carbon_state/100),1),
round(sd(iris$Petal.Length),1),
round(sd(iris$Sepal.Width),1),
round(sd(CO2$conc/100),1),
round(sd(CO2$uptake),1))
SD_apxx <- c(round(sd_apx(min = min(tree$DBH1), max = max(tree$DBH1)),1),
sd_apx(min = min(plot.C$tons1), max = max(plot.C$tons1)),
sd_apx(min = min(elm$DIA), max = max(elm$DIA)),
sd_apx(min = min(elm$HT), max = max(elm$HT)),
sd_apx(min = min(elm$CROWN_DIAM_WIDE), max = max(elm$CROWN_DIAM_WIDE)),
sd_apx(min = min(carbon_state/100), max = max(carbon_state/100)),
sd_apx(min = min(iris$Petal.Length), max = max(iris$Petal.Length)),
sd_apx(min = min(iris$Sepal.Width), max = max(iris$Sepal.Width)),
sd_apx(min = min(CO2$conc/100), max = max(CO2$conc/100)),
sd_apx(min = min(CO2$uptake), max = max(CO2$uptake)))
all_data <- tibble(Dataset, Variable, SD_true, SD_apxx)
all_data <- all_data %>%
mutate(`Percent different` = ((sd_true-sd_apxx)/sd_true)*100)
# Chunk 6
knitr::kable((all_data[,1:4]),
caption = 'Example datasets') %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
SD_apxx <- c(round(sd_apx(min = min(tree$DBH1), max = max(tree$DBH1)),1),
round(sd_apx(min = min(plot.C$tons1), max = max(plot.C$tons1),1)),
round(sd_apx(min = min(elm$DIA), max = max(elm$DIA),1)),
round(sd_apx(min = min(elm$HT), max = max(elm$HT),1)),
round(sd_apx(min = min(elm$CROWN_DIAM_WIDE), max = max(elm$CROWN_DIAM_WIDE),1)),
round(sd_apx(min = min(carbon_state/100), max = max(carbon_state/100),1)),
round(sd_apx(min = min(iris$Petal.Length), max = max(iris$Petal.Length),1)),
round(sd_apx(min = min(iris$Sepal.Width), max = max(iris$Sepal.Width),1)),
round(sd_apx(min = min(CO2$conc/100), max = max(CO2$conc/100),1)),
round(sd_apx(min = min(CO2$uptake), max = max(CO2$uptake)),1))
SD_apxx <- c(round(sd_apx(min = min(tree$DBH1), max = max(tree$DBH1)),1),
round(sd_apx(min = min(plot.C$tons1), max = max(plot.C$tons1)),1),
round(sd_apx(min = min(elm$DIA), max = max(elm$DIA)),1),
round(sd_apx(min = min(elm$HT), max = max(elm$HT)),1),
round(sd_apx(min = min(elm$CROWN_DIAM_WIDE), max = max(elm$CROWN_DIAM_WIDE)),1),
round(sd_apx(min = min(carbon_state/100), max = max(carbon_state/100)),1),
round(sd_apx(min = min(iris$Petal.Length), max = max(iris$Petal.Length)),1),
round(sd_apx(min = min(iris$Sepal.Width), max = max(iris$Sepal.Width)),1),
round(sd_apx(min = min(CO2$conc/100), max = max(CO2$conc/100)),1),
round(sd_apx(min = min(CO2$uptake), max = max(CO2$uptake)),1))
# Chunk 1
library(tidyverse)
library(googlesheets4)
library(knitr)
library(formattable)
library(kableExtra)
options(kableExtra.auto_format = FALSE)
# Chunk 2
# Here is the function:
total_AGB<-function(SPGRP_JENKINS,DIA){
if(SPGRP_JENKINS=='Aspen')
{JENKINS_TOTAL_B1=-2.2094; JENKINS_TOTAL_B2=2.3867}
if(SPGRP_JENKINS=='Cedar/larch')
{JENKINS_TOTAL_B1=-2.0336; JENKINS_TOTAL_B2=2.2592}
if(SPGRP_JENKINS=='Maple/oak/hickory/beech')
{JENKINS_TOTAL_B1=-2.0127; JENKINS_TOTAL_B2=2.4342}
if(SPGRP_JENKINS=='Mixed hardwood')
{JENKINS_TOTAL_B1=-2.48; JENKINS_TOTAL_B2=2.4835}
if(SPGRP_JENKINS=='Pine')
{JENKINS_TOTAL_B1=-2.5356; JENKINS_TOTAL_B2=2.4349}
if(SPGRP_JENKINS=='Soft maple/birch')
{JENKINS_TOTAL_B1=-1.9123; JENKINS_TOTAL_B2=2.3651}
if(SPGRP_JENKINS=='Spruce')
{JENKINS_TOTAL_B1=-2.0773; JENKINS_TOTAL_B2=2.3323}
if(SPGRP_JENKINS=='True fir/hemlock')
{JENKINS_TOTAL_B1=-2.5384; JENKINS_TOTAL_B2=2.4814}
# Calculate total aboveground biomass of each tree (AGB)
# Note the equation predicts biomass in kg, but we  convert it into pounds
AGB=(exp(JENKINS_TOTAL_B1+JENKINS_TOTAL_B2*log(DIA*2.54)))*2.20462
return(AGB=AGB)}
# Chunk 3
#Read in datasets
# tree carbon
tree <- read_sheet("https://docs.google.com/spreadsheets/d/1sjRe8pi08C4jY8TlDBeRKxmhqMlo85eB5wmqNovsiOU/edit?usp=sharing")
# wood carbon
wood2021 <- read_sheet("https://docs.google.com/spreadsheets/d/1ekdnxAnmO0PfVAmA-aZ1j6lNdwNKMGz7WLK1vBttmtA/edit?usp=sharing")
PLOT_SIZE = 10
wood2021$AGB1<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH1)
wood2021$C1<-wood2021$AGB1*0.5
wood2021$C_sum1<-wood2021$C1*PLOT_SIZE
wood2021$AGB2<-mapply(total_AGB, SPGRP_JENKINS=wood2021$Spp2, DIA=wood2021$DBH2)
wood2021$C2<-wood2021$AGB2*0.5
wood2021$C_sum2<-wood2021$C2*PLOT_SIZE
plot.C <- wood2021 %>%
group_by(Team) %>%
summarize(CPA1 = sum(C_sum1),
CPA2 = sum(C_sum2))
plot.C$CO2e1 <- plot.C$CPA1 * 3.667
plot.C$tons1 <- plot.C$CPA1 / 2000
# elm
elm <- read_csv('C:/Users/russellm/Documents/Projects/SNRAwR/SNRAwR/Data/elm.csv')
# State Carbon (MMT) in 2019
carbon_state <- c(1238,
1288,
1407,
1041,
1157,
233,
1437,
1470,
888,
1041,
835,
165,
346,
1102,
368,
176,
191,
1596,
325,
215,
1911,
3186,
473,
1162,
992,
3044,
873,
481,
610,
657,
1533,
1215,
2706,
1726,
38,
1429,
91,
35,
277,
48,
1707,
522,
110,
705,
622,
1867,
1224,
458)
# iris
# iris$Petal.Length
# iris$Sepal.Width
# Chunk 4
sd_apx <- function(min, max){
sd_hat = (max-min)/4
return(sd_hat)
}
# Chunk 5
Dataset <- c("carbon",
"carbon",
"elm",
"elm",
"elm",
"state_carbon",
"iris",
"iris",
"CO2",
"CO2")
Variable <- c("DBH",
"Tons",
"DIA",
"HT",
"CROWN_DIAM_WIDE",
"MMT/100",
"Petal.Length",
"Sepal.Width",
"conc/100",
"uptake")
SD_true <- c(round(sd(tree$DBH1),1),
round(sd(plot.C$tons1),1),
round(sd(elm$DIA),1),
round(sd(elm$HT),1),
round(sd(elm$CROWN_DIAM_WIDE),1),
round(sd(carbon_state/100),1),
round(sd(iris$Petal.Length),1),
round(sd(iris$Sepal.Width),1),
round(sd(CO2$conc/100),1),
round(sd(CO2$uptake),1))
SD_apxx <- c(round(sd_apx(min = min(tree$DBH1), max = max(tree$DBH1)),1),
round(sd_apx(min = min(plot.C$tons1), max = max(plot.C$tons1)),1),
round(sd_apx(min = min(elm$DIA), max = max(elm$DIA)),1),
round(sd_apx(min = min(elm$HT), max = max(elm$HT)),1),
round(sd_apx(min = min(elm$CROWN_DIAM_WIDE), max = max(elm$CROWN_DIAM_WIDE)),1),
round(sd_apx(min = min(carbon_state/100), max = max(carbon_state/100)),1),
round(sd_apx(min = min(iris$Petal.Length), max = max(iris$Petal.Length)),1),
round(sd_apx(min = min(iris$Sepal.Width), max = max(iris$Sepal.Width)),1),
round(sd_apx(min = min(CO2$conc/100), max = max(CO2$conc/100)),1),
round(sd_apx(min = min(CO2$uptake), max = max(CO2$uptake)),1))
all_data <- tibble(Dataset, Variable, SD_true, SD_apxx)
all_data <- all_data %>%
mutate(`Percent different` = ((sd_true-sd_apxx)/sd_true)*100)
# Chunk 6
knitr::kable((all_data[,1:4]),
caption = 'Example datasets') %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
p.all <- ggplot(all_data, aes(x = sd_true, y = sd_apxx)) +
geom_point() +
geom_abline(slope=1, intercept = 0) +
xlab("True SD") +
ylab("Approximate SD") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"))
p.all
View(all_data)
elm$DIA
min(elm$DIA)
max(elm$DIA)
elm
View(elm)
blogdown:::serve_site()
