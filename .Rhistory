axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = -1),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = -0.5),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = -0.1),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = --0.01),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = 0),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = 1),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
p.date <- ggplot(mean_ppp_date, aes(x = DateApproved2, y = n_loans)) +
geom_bar(stat="identity", col = "black") +
labs(x = "Loan approval date",
y = "Number of PPP loans") +
scale_fill_brewer(palette="Greys")  +
scale_x_date(date_breaks = "1 month", date_labels = "%m-%y") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black", angle = 45, vjust = 0.5),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = c(0.8, 0.8))
p.date
# Graph number of loans by NAICS category
mean_ppp_indcat <- ppp %>%
group_by(IndustryCat) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T)) %>%
arrange(desc(n_loans))
mean_ppp_indcat
ggplot(mean_ppp_indcat, aes(reorder(IndustryCat, n_loans), n_loans, fill = IndustryCat)) +
geom_bar(stat = "identity", col = "black")+
coord_flip() +
labs(x = " ", y = "Companies receiving PPP loans") +
scale_fill_brewer(palette="BrBG") +
theme(panel.background = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"),
axis.text.y = element_text(size = 7),
legend.position = "none")
# Make table of NAICS industries and loan amounts.
ppp <- ppp %>%
mutate(Industry = IndustryCat)
mean_ppp_indcat <- ppp %>%
group_by(Industry) %>%
summarize(`Num loans` = n(),
`Avg num jobs` = round(mean(JobsReported, na.rm = T),1),
`Avg loan amount (USD)` = as.numeric(gsub("\\$", "", round(mean(InitialApprovalAmount), 0)))) %>%
mutate(`Avg loan amount (USD)` = currency(`Avg loan amount (USD)`, digits = 0L)) %>%
arrange(desc(`Avg loan amount (USD)`))
mean_ppp_indcat %>%
kable("html", format.args = list(big.mark = ","),
caption = 'Average PPP loan amounts for forest products companies by NAICS industry classification.') %>%
kable_styling()
# Calculate mean across all industries
mean_ppp <- ppp %>%
summarize(`Num loans` = n(),
`Avg num jobs` = round(mean(JobsReported, na.rm = T),1),
`Avg loan amount (USD)` = as.numeric(gsub("\\$", "", round(mean(InitialApprovalAmount), 0))))
mean_ppp
# Plot jobs versus loan amounts
p.jobs<- ggplot(ppp, aes(JobsReported, InitialApprovalAmount/1000000)) +
geom_hex(bins = 25) +
scale_fill_gradient(low="gray",high="black",trans="log") +
labs(y = "PPP loan amount ($USD, millions)",
x = "Jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.jobs
# Make tables of loans amount size and approved values
ppp <- ppp %>%
mutate(LoanSize = ifelse(InitialApprovalAmount <50000, "< 50K",
ifelse(InitialApprovalAmount >50001 & InitialApprovalAmount <100000, paste0("50K - 100K"),
ifelse(InitialApprovalAmount >100001 & InitialApprovalAmount <150000, "100K - 150K",
ifelse(InitialApprovalAmount >150001 & InitialApprovalAmount <350000, "150K - 350K",
ifelse(InitialApprovalAmount >350001 & InitialApprovalAmount <1000000, "350K - 1M",
ifelse(InitialApprovalAmount >1000000 & InitialApprovalAmount <2000000, "1M - 2M",
ifelse(InitialApprovalAmount >2000001 & InitialApprovalAmount <5000000, "2M - 5M",
"> 5M"))))))),
LoanSizeRank = ifelse(InitialApprovalAmount <50000, 1,
ifelse(InitialApprovalAmount >50001 & InitialApprovalAmount <100000, 2,
ifelse(InitialApprovalAmount >100001 & InitialApprovalAmount <150000, 3,
ifelse(InitialApprovalAmount >150001 & InitialApprovalAmount <350000, 4,
ifelse(InitialApprovalAmount >350001 & InitialApprovalAmount <1000000, 4,
ifelse(InitialApprovalAmount >1000000 & InitialApprovalAmount <2000000, 5,
ifelse(InitialApprovalAmount >2000001 & InitialApprovalAmount <5000000, 6,
7))))))))
# Calculate averages by loan size
mean_ppp_size <- ppp %>%
group_by(LoanSize) %>%
summarize(`Num loans` = n(),
`Total approved value (USD, millions)`= sum(InitialApprovalAmount)/1000000) %>%
mutate(`Percent of approved loans` = round((prop.table(`Num loans`)*100), 1),
`Percent of approved value` = round((prop.table(`Total approved value (USD, millions)`)*100), 1),
`Total approved value (USD, millions)` = round(`Total approved value (USD, millions)`, 1),
`Loan size (USD)` = as.character(LoanSize),
LoanSizeRank = ifelse(`Loan size (USD)`== "< 50K", 1,
ifelse(`Loan size (USD)`== "50K - 100K", 2,
ifelse(`Loan size (USD)`== "100K - 150K", 3,
ifelse(`Loan size (USD)`== "150K - 350K", 4,
ifelse(`Loan size (USD)`== "350K - 1M", 4,
ifelse(`Loan size (USD)`== "1M - 2M", 5,
ifelse(`Loan size (USD)`== "2M - 5M", 6,
7)))))))) %>%
# arrange(LoanSizeRank) %>%
arrange(LoanSizeRank) %>%
select(`Loan size (USD)`, `Num loans`, `Total approved value (USD, millions)`,
`Percent of approved loans`, `Percent of approved value`)
mean_ppp_size %>%
kable("html", format.args = list(big.mark = ","),
caption = 'Number and value of PPP loans provided to forest products companies, April 2020 through May 2021.') %>%
kable_styling()
# Make industry  table with loan amounts
mean_ppp_name <- ppp %>%
group_by(NAICSName) %>%
summarize(`Num loans` = n(),
`Avg loan value (USD)` = mean(InitialApprovalAmount),
`Total loan value (USD, millions)` = sum(InitialApprovalAmount)/1000000,
`Avg num jobs` = mean(JobsReported, na.rm=T),
`Total num jobs` = sum(JobsReported, na.rm=T)) %>%
arrange(desc(`Total num jobs`)) %>%
mutate(Industry = NAICSName,
`Avg loan value (USD)` = round(`Avg loan value (USD)`, 0),
`Total loan value (USD, millions)`= round(`Total loan value (USD, millions)`, 1),
`Avg num jobs` = round(`Avg num jobs`, 1)) %>%
select(Industry, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`)
mean_ppp_name %>%
kable("html", format.args = list(big.mark = ","), escape = F,
caption = 'Mean value and number of jobs supported by PPP loans provided to forest products companies by NAICS industry categories.') %>%
kable_styling()
# Make state choropleth map with loan amounts
mean_ppp_state <- ppp %>%
group_by(BorrowerState) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
sum_loan_initial = sum(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T),
sum_jobs = sum(JobsReported, na.rm=T)) %>%
mutate( state_abbv = BorrowerState,
state = BorrowerState) %>%
arrange(desc(sum_loan_initial))
fips_cd <- fips_codes %>%
group_by(state) %>%
summarize(fips_code = max(state_code))
mean_ppp_state <- inner_join(mean_ppp_state, fips_cd) %>%
mutate(state_fips = fips_code)
spatial_data <- left_join(get_urbn_map(map = "states", sf = TRUE),
statedata,
by = "state_name")
mean_ppp_state <- inner_join(mean_ppp_state, spatial_data)
mean_ppp_state <- left_join(mean_ppp_state, states, by = "state_name")
p.amt <-  ggplot(mean_ppp_state, mapping = aes(long, lat, group = group,
fill = sum_loan_initial/1000000)) +
geom_polygon(color = "black", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
scale_fill_gradient(name="Total PPP \nloan amount \n($USD, millions)", low="white", high="brown") +
labs(title = "PPP loans to forest products industries") +
theme(panel.background = element_rect(fill = "NA"),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
legend.position = c(0.9, 0.4))
p.amt
# Make table by State and loan amount
mean_ppp_state <- ppp %>%
group_by(BorrowerState) %>%
summarize(`Num loans` = n(),
`Avg loan value (USD)` = mean(InitialApprovalAmount),
`Total loan value (USD, millions)` = sum(InitialApprovalAmount)/1000000,
`Avg num jobs` = mean(JobsReported, na.rm=T),
`Total num jobs` = sum(JobsReported, na.rm=T)) %>%
arrange(BorrowerState) %>%
# arrange(`Total loan value ($USD, millions)`) %>%
mutate(State = BorrowerState,
`Avg loan value (USD)` = round(`Avg loan value (USD)`, 0),
`Total loan value (USD, millions)`= round(`Total loan value (USD, millions)`, 1),
`Avg num jobs` = round(`Avg num jobs`, 1)) %>%
select(State, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`) %>%
filter(State != "NA")
fips_codes_state <- fips_codes %>%
distinct(state, state_name)
mean_ppp_state <- mean_ppp_state %>%
mutate(state = State) %>%
inner_join(fips_codes_state)
mean_ppp_state <- mean_ppp_state %>%
rename(`State name` = state_name) %>%
select(`State name`, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`)
mean_ppp_state %>%
kable("html", format.args = list(big.mark = ","), escape = F,
caption = 'Mean value and number of jobs supported by PPP loans provided to forest products companies in each state.') %>%
kable_styling()
# Make table from Pelkki and Sherman 2020; their Figure 2
pelkki <- tribble(
~State, ~`Total contribution to GDP rank`, ~`Total PPP loan value rank`,
"California", 1, 1,
"Pennsylvania", 2, 3,
"Wisconsin", 3, 7,
"Georgia", 4, 9,
"North Carolina", 5, 11,
"Texas", 6, 5,
"Ohio", 7, 4,
"New York", 8, 6,
"Tennessee", 9, 19,
"Alabama", 10, 14
)
pelkki %>%
kable("html", format.args = list(big.mark = ","), escape = F,
caption = 'Rankings of highest total contribution of forestry to state GDP (from Pelkki and Sherman 2020) and total PPP loan amounts to states.') %>%
kable_styling()
688,682,113,289/790,349,510,576
688682113289/790349510576
ppp
# Summarize by PPP daily loan date
mean_ppp_date <- ppp %>%
group_by(DateApproved) %>%
summarize(n_loans = n(),) %>%
arrange(desc(n_loans)) %>%
mutate(DateApproved2 = as.Date(DateApproved, format =  "%m/%d/%Y"),
Round = ifelse(DateApproved2 < "2020-04-17", "Round 1",
ifelse(DateApproved2 > "2021-01-01", "Round 3", "Round 2")))
# Summarize by PPP round
mean_ppp_date2 <- mean_ppp_date %>%
group_by(Round) %>%
summarize(n_loans = sum(n_loans))
mean_ppp_date2
# Summarize by draw
mean_ppp_draw <- ppp %>%
group_by(ProcessingMethod) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T)) %>%
arrange(desc(mean_jobs))
mean_ppp_draw
ppp
sum(ppp$InitialApprovalAmount)
View(ppp)
mean_ppp_date2
16214/(16214+10178+9082)
9082/(16214+10178+9082)
10178/(16214+10178+9082)
mean_ppp_draw
8245           /27229
# Graph number of loans by NAICS category
mean_ppp_indcat <- ppp %>%
group_by(IndustryCat) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T)) %>%
arrange(desc(n_loans))
mean_ppp_indcat
12401+11834
(12401+11834)/(12401+11834+3428+2715+2477+1347+727+545)
# Make table of NAICS industries and loan amounts.
ppp <- ppp %>%
mutate(Industry = IndustryCat)
mean_ppp_indcat <- ppp %>%
group_by(Industry) %>%
summarize(`Num loans` = n(),
`Avg num jobs` = round(mean(JobsReported, na.rm = T),1),
`Avg loan amount (USD)` = as.numeric(gsub("\\$", "", round(mean(InitialApprovalAmount), 0)))) %>%
mutate(`Avg loan amount (USD)` = currency(`Avg loan amount (USD)`, digits = 0L)) %>%
arrange(desc(`Avg loan amount (USD)`))
mean_ppp_indcat %>%
kable("html", format.args = list(big.mark = ","),
caption = 'Average PPP loan amounts for forest products companies by NAICS industry classification.') %>%
kable_styling()
lm.jobs <- lm((InitialApprovalAmount/1000000) ~ JobsReported, data = ppp)
summary(lm.jobs)
p.jobs
# Calculate averages by loan size
mean_ppp_size <- ppp %>%
group_by(LoanSize) %>%
summarize(`Num loans` = n(),
`Total approved value (USD, millions)`= sum(InitialApprovalAmount)/1000000) %>%
mutate(`Percent of approved loans` = round((prop.table(`Num loans`)*100), 1),
`Percent of approved value` = round((prop.table(`Total approved value (USD, millions)`)*100), 1),
`Total approved value (USD, millions)` = round(`Total approved value (USD, millions)`, 1),
`Loan size (USD)` = as.character(LoanSize),
LoanSizeRank = ifelse(`Loan size (USD)`== "< 50K", 1,
ifelse(`Loan size (USD)`== "50K - 100K", 2,
ifelse(`Loan size (USD)`== "100K - 150K", 3,
ifelse(`Loan size (USD)`== "150K - 350K", 4,
ifelse(`Loan size (USD)`== "350K - 1M", 4,
ifelse(`Loan size (USD)`== "1M - 2M", 5,
ifelse(`Loan size (USD)`== "2M - 5M", 6,
7)))))))) %>%
# arrange(LoanSizeRank) %>%
arrange(LoanSizeRank) %>%
select(`Loan size (USD)`, `Num loans`, `Total approved value (USD, millions)`,
`Percent of approved loans`, `Percent of approved value`)
mean_ppp_size
21622/21622+4879+2332+3598+2139+587+156+161
21622/(21622+4879+2332+3598+2139+587+156+161)
(1213+816+481+337)/(1213+816+481+337+386+351+288+823)
# Make industry  table with loan amounts
mean_ppp_name <- ppp %>%
group_by(NAICSName) %>%
summarize(`Num loans` = n(),
`Avg loan value (USD)` = mean(InitialApprovalAmount),
`Total loan value (USD, millions)` = sum(InitialApprovalAmount)/1000000,
`Avg num jobs` = mean(JobsReported, na.rm=T),
`Total num jobs` = sum(JobsReported, na.rm=T)) %>%
arrange(desc(`Total num jobs`)) %>%
mutate(Industry = NAICSName,
`Avg loan value (USD)` = round(`Avg loan value (USD)`, 0),
`Total loan value (USD, millions)`= round(`Total loan value (USD, millions)`, 1),
`Avg num jobs` = round(`Avg num jobs`, 1)) %>%
select(Industry, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`)
mean_ppp_name
sum(mean_ppp_name$`Total num jobs`)
mean_ppp_name %>%
kable("html", format.args = list(big.mark = ","), escape = F,
caption = 'Mean value and number of jobs supported by PPP loans provided to forest products companies by NAICS industry categories.') %>%
kable_styling()
# Make state choropleth map with loan amounts
mean_ppp_state <- ppp %>%
group_by(BorrowerState) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
sum_loan_initial = sum(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T),
sum_jobs = sum(JobsReported, na.rm=T)) %>%
mutate( state_abbv = BorrowerState,
state = BorrowerState) %>%
arrange(desc(sum_loan_initial))
# Make state choropleth map with loan amounts
mean_ppp_state <- ppp %>%
group_by(BorrowerState) %>%
summarize(n_loans = n(),
mean_loan_initial = mean(InitialApprovalAmount),
sum_loan_initial = sum(InitialApprovalAmount),
mean_jobs = mean(JobsReported, na.rm=T),
sum_jobs = sum(JobsReported, na.rm=T)) %>%
mutate( state_abbv = BorrowerState,
state = BorrowerState) %>%
arrange(desc(sum_loan_initial))
#mean_ppp_state
fips_cd <- fips_codes %>%
group_by(state) %>%
summarize(fips_code = max(state_code))
#fips_cd
mean_ppp_state <- inner_join(mean_ppp_state, fips_cd) %>%
mutate(state_fips = fips_code)
spatial_data <- left_join(get_urbn_map(map = "states", sf = TRUE),
statedata,
by = "state_name")
mean_ppp_state <- inner_join(mean_ppp_state, spatial_data)
mean_ppp_state <- left_join(mean_ppp_state, states, by = "state_name")
p.amt <-  ggplot(mean_ppp_state, mapping = aes(long, lat, group = group,
fill = sum_loan_initial/1000000)) +
geom_polygon(color = "black", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
scale_fill_gradient(name="Total PPP \nloan amount \n($USD, millions)", low="white", high="brown") +
labs(title = "PPP loans to forest products industries") +
theme(panel.background = element_rect(fill = "NA"),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
legend.position = c(0.9, 0.4))
p.amt
# Make table by State and loan amount
mean_ppp_state <- ppp %>%
group_by(BorrowerState) %>%
summarize(`Num loans` = n(),
`Avg loan value (USD)` = mean(InitialApprovalAmount),
`Total loan value (USD, millions)` = sum(InitialApprovalAmount)/1000000,
`Avg num jobs` = mean(JobsReported, na.rm=T),
`Total num jobs` = sum(JobsReported, na.rm=T)) %>%
arrange(BorrowerState) %>%
# arrange(`Total loan value ($USD, millions)`) %>%
mutate(State = BorrowerState,
`Avg loan value (USD)` = round(`Avg loan value (USD)`, 0),
`Total loan value (USD, millions)`= round(`Total loan value (USD, millions)`, 1),
`Avg num jobs` = round(`Avg num jobs`, 1)) %>%
select(State, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`) %>%
filter(State != "NA")
#mean_ppp_state
fips_codes_state <- fips_codes %>%
distinct(state, state_name)
#fips_codes_state
mean_ppp_state <- mean_ppp_state %>%
mutate(state = State) %>%
inner_join(fips_codes_state)
mean_ppp_state <- mean_ppp_state %>%
rename(`State name` = state_name) %>%
select(`State name`, `Num loans`, `Avg loan value (USD)`, `Total loan value (USD, millions)`,
`Avg num jobs`, `Total num jobs`)
mean_ppp_state %>%
kable("html", format.args = list(big.mark = ","), escape = F,
caption = 'Mean value and number of jobs supported by PPP loans provided to forest products companies in each state.') %>%
kable_styling()
View(mean_ppp_state)
sum(mean_ppp_name$`Total num jobs`)
sum(ppp$InitialApprovalAmount)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
5.14+4.12+2.19+2.23
blogdown:::new_post_addin()
blogdown:::serve_site()
