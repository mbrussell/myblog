p.numloans <- ggplot(me, aes(LoanAmount))+
geom_histogram(bins = 15, fill="cyan", col = "black")+
labs(y = "Number of PPP loans",
x = "Loan amount ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans
me_big <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp_150kplus.csv')
mean_me <- me %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
mean_me <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
mean_me
mean_me <- mean_me %>%
mutate(ifelse(LoanRange = "d $350,000-1 million", "$350,000-1 million",
ifelse(LoanRange = "e $150,000-350,000", "$150,000-350,000", "foo")))
mean_me <- mean_me %>%
mutate(ifelse(LoanRange = "d $350,000-1 million", "$350,000-1 million", "foo"))
loan <-
tribble (
~LoanRange, ~`Loan Range`,
"d $350,000-1 million", "$350,000-1 million",
"e $150,000-350,000", "$150,000-350,000"
)
loan
mean_me <- inner_join(mean_me, loan)
mean_me
p.numloans.big <- ggplot(mean_me, aes(`Loan Range`, n_loans))+
geom_bar(stat="identity", fill="cyan", col = "black")+
labs(x = "Number of PPP loans",
y = "Loan amount range ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans.big
p.numloans.big <- ggplot(mean_me, aes(`Loan Range`, n_loans))+
geom_bar(stat="identity", fill="cyan", col = "black")+
coord_flip()+
labs(x = "Number of PPP loans",
y = "Loan amount range ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans.big
p.numloans.big <- ggplot(mean_me, aes(`Loan Range`, n_loans))+
geom_bar(stat="identity", fill="cyan", col = "black")+
coord_flip()+
labs(y = "Number of PPP loans",
x = "Loan amount range ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans.big
p.numloans <- ggplot(me, aes(JobsReported, LoanAmount))+
geom_point()+
geom_smooth()+
labs(y = "Loan amount ($)",
x = "Number of jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans
p.jobs
p.jobs<- ggplot(me, aes(JobsReported, LoanAmount))+
geom_point()+
geom_smooth()+
labs(y = "Loan amount ($)",
x = "Number of jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.jobs
mean_me
me_big
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
me_city_small <- me$City
me_city_small
me_city_all<- rbind(me$City, me_big$City)
me_city_all<- bind(me$City, me_big$City)
me_city_all<- inner_join(me$City, me_big$City)
me_city_all<- join(me$City, me_big$City)
me_city_all<- c(me$City, me_big$City)
me_city_all
me_city_all<- df(c(me$City, me_big$City))
me_city_all<- tribble(c(me$City, me_big$City))
me_city_all<- tibble(c(me$City, me_big$City))
me_city_all
me_city_all<- tibble(City = c(me$City, me_big$City))
me_city_all
me_city_all<- tibble(City = c(me$City, me_big$City))
me_city2 <- me_city_all %>%
mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(CITY) %>%
summarize(n_city = n())
me_city2
me_city2 <- me_city %>%
rename(`Number of loans` = n_city) %>%
filter(`Number of loans` >= 5) %>%
arrange(desc(`Number of loans`))
me_city2 %>%
kable("html", caption = 'Number of PPP loans offered to logging businesses in Maine cities.') %>%
kable_styling()
me_city_all<- tibble(City = c(me$City, me_big$City))
me_city2 <- me_city_all %>%
mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(CITY) %>%
summarize(n_city = n())
me_city2
me_city3 <- me_city2 %>%
rename(`Number of loans` = n_city) %>%
filter(`Number of loans` >= 5) %>%
arrange(desc(`Number of loans`))
me_city3 %>%
kable("html", caption = 'Number of PPP loans offered to logging businesses in Maine cities.') %>%
kable_styling()
me
me_city2 <- me %>%
#  mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(BusinessType) %>%
summarize(num = n())
me_city2
me_city2 <- me %>%
#  mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(RaceEthnicity ) %>%
summarize(num = n())
me_city2
me_city2 <- me %>%
#  mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(Gender ) %>%
summarize(num = n())
me_city2
me_city2 <- me %>%
#  mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(Lender) %>%
summarize(num = n())
me_city2
View(me_city2)
me
me_city2 <- me %>%
#  mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(DateApproved ) %>%
summarize(num = n())
me_city2
View(me_city2)
blogdown:::serve_site()
sum_me
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me_big <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
sum_me_big
#Total amt to Maine logging businesses
sum_me + (11*350000) + (16*150000)
11+16+229
options(scipen=10000)
library(tidyverse)
library(knitr)
library(formattable)
library(kableExtra)
all <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp.csv')
me <- all %>%
filter(NAICSCode %in% c(1133, 113310))
mean_me <- me %>%
summarize(mean_loan = mean(LoanAmount),
mean_jobs = mean(JobsReported, na.rm=T))
mean_me
p.numloans <- ggplot(me, aes(LoanAmount))+
geom_histogram(bins = 15, fill="cyan", col = "black")+
labs(y = "Number of PPP loans",
x = "Loan amount ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans
me_big <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp_150kplus.csv')
mean_me <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
mean_me
loan <-
tribble (
~LoanRange, ~`Loan Range`,
"d $350,000-1 million", "$350,000-1 million",
"e $150,000-350,000", "$150,000-350,000"
)
mean_me <- inner_join(mean_me, loan)
p.numloans.big <- ggplot(mean_me, aes(`Loan Range`, n_loans))+
geom_bar(stat="identity", fill="cyan", col = "black")+
coord_flip()+
labs(y = "Number of PPP loans",
x = "Loan amount range ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans.big
me
mean_me
p.jobs<- ggplot(me, aes(JobsReported, LoanAmount))+
geom_point()+
geom_smooth()+
labs(y = "Loan amount ($)",
x = "Number of jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.jobs
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
me_big <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp_150kplus.csv')
mean_me <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
mean_me
loan <-
tribble (
~LoanRange, ~`Loan Range`,
"d $350,000-1 million", "$350,000-1 million",
"e $150,000-350,000", "$150,000-350,000"
)
mean_me <- inner_join(mean_me, loan)
p.numloans.big <- ggplot(mean_me, aes(`Loan Range`, n_loans))+
geom_bar(stat="identity", fill="cyan", col = "black")+
coord_flip()+
labs(y = "Number of PPP loans",
x = "Loan amount range ($)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.numloans.big
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me_big <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
sum_me_big
#Total amt to Maine logging businesses
sum_me + (11*350000) + (16*150000)
p.jobs<- ggplot(me, aes(JobsReported, LoanAmount))+
geom_point()+
geom_smooth()+
labs(y = "Loan amount ($)",
x = "Number of jobs reported") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.title = element_blank(),
legend.key=element_blank(),
legend.position = "none")
p.jobs
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
all <- read_csv('C:/Users/russellm/Documents/Arbor/Data/me_ppp.csv')
me <- all %>%
filter(NAICSCode %in% c(1133, 113310))
mean_me <- me %>%
summarize(mean_loan = mean(LoanAmount),
mean_jobs = mean(JobsReported, na.rm=T))
mean_me
sum_me <- me %>%
summarize(sum_loan = sum(LoanAmount))
sum_me
sum_me_big <- me_big %>%
group_by(LoanRange) %>%
summarize(n_loans = n())
sum_me_big
#Total amt to Maine logging businesses
sum_me + (11*350000) + (16*150000)
mean_me2 <- me_big %>%
group_by(LoanRange) %>%
summarize(mean_jobs = mean(JobsReported ))
mean_me2
me_city_all<- tibble(City = c(me$City, me_big$City))
me_city2 <- me_city_all %>%
mutate(CITY = str_to_upper(City, locale = "en")) %>%
group_by(CITY) %>%
summarize(n_city = n())
me_city2
me_city3 <- me_city2 %>%
rename(`Number of loans` = n_city) %>%
filter(`Number of loans` >= 5) %>%
arrange(desc(`Number of loans`))
me_city3 %>%
kable("html", caption = 'Number of PPP loans offered to logging businesses in Maine cities.') %>%
kable_styling()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::hugo_version()
blogdown:::new_post_addin()
blogdown:::serve_site()
+ Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
+ Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
+Every year the USDA Forest Service reports an economy-wide inventory of greenhouse gas (GHG) emissions and removals in the country. This most recent document provides an overview of the status and trends of GHG emissions and removals from forests, woodlands, harvested wood products, and urban trees in the United States from 1990 to 2018. Includes national and state-level reports.
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
ffo <- tribble(
~Topic, ~Group, ~Pct,
"Age greater than 65", "US population", 13,
"Age greater than 65", "US private forest landowners", 43,
"Men", "US population", 49,
"Men", "US private forest landowners", 79,
"White", "US population", 72,
"White", "US private forest landowners", 95,
"Non-Hispanic", "US population", 84,
"Non-Hispanic", "US private forest landowners", 99,
)
p.ffo <- ggplot(ffo, aes(Topic, Pct,  fill = Group)) +
geom_bar(stat = "identity", position = "dodge",  col = "black") +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
labs(y = "Percentage",
x = " ") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.position = "top",
legend.title = element_blank())
p.ffo
blogdown:::serve_site()
?power.t.test
blogdown:::new_post_addin()
blogdown:::serve_site()
# Load library
library(tidyverse)
# Read in data
graphs<-read.csv('C:/Users/russellm/Documents/Projects/z_Archived/Graphs/graphperception_all.csv')
# Input correct pie graph answers
graphs$Q1B_right<-80
graphs$Q1C_right<-50
graphs$Q1D_right<-15
graphs$Q2B_right<-40
graphs$Q2C_right<-65
graphs$Q2D_right<-25
graphs$Q3B_right<-62.5
graphs$Q3C_right<-12.5
graphs$Q3D_right<-37.5
# Calculate error of pie graph answers
graphs$Q1B_error<-(graphs$Q1B_right-graphs$Q1B)
graphs$Q1C_error<-(graphs$Q1C_right-graphs$Q1C)
graphs$Q1D_error<-(graphs$Q1D_right-graphs$Q1D)
graphs$Q2B_error<-(graphs$Q2B_right-graphs$Q2B)
graphs$Q2C_error<-(graphs$Q2C_right-graphs$Q2C)
graphs$Q2D_error<-(graphs$Q2D_right-graphs$Q2D)
graphs$Q3B_error<-(graphs$Q3B_right-graphs$Q3B)
graphs$Q3C_error<-(graphs$Q3C_right-graphs$Q3C)
graphs$Q3D_error<-(graphs$Q3D_right-graphs$Q3D)
# Make data set of pie graph errors
m1<-as.data.frame(colMeans(graphs))
colnames(m1) <- c("mean_error")
m1$name<-rownames(m1)
m2<-m1[m1$name %in% c("Q1B_error","Q1C_error","Q1D_error",
"Q2B_error","Q2C_error","Q2D_error",
"Q3B_error","Q3C_error","Q3D_error"),]
m2$name2<-substr(rownames(m2),1,3)
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", "Angle"))
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x=name2, y=mean_error,fill=Type))+
geom_bar(stat="identity")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat="identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", " Angle"))
# Plot mean error values
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat="identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
#ggtitle("n = 8")+
ggtitle("n = 114")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.ticks = element_line(size = 0.5,color="black"))
p.mean_error
tips2$day <- factor(m2$name2,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
# Plot mean error values
m2$name2 <- factor(m2$name2,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
# Read in data
graphs<-read.csv('C:/Users/russellm/Documents/Projects/z_Archived/Graphs/graphperception_all.csv')
# Input correct pie graph answers
graphs$Q1B_right<-80
graphs$Q1C_right<-50
graphs$Q1D_right<-15
graphs$Q2B_right<-40
graphs$Q2C_right<-65
graphs$Q2D_right<-25
graphs$Q3B_right<-62.5
graphs$Q3C_right<-12.5
graphs$Q3D_right<-37.5
# Calculate error of pie graph answers
graphs$Q1B_error<-(graphs$Q1B_right-graphs$Q1B)
graphs$Q1C_error<-(graphs$Q1C_right-graphs$Q1C)
graphs$Q1D_error<-(graphs$Q1D_right-graphs$Q1D)
graphs$Q2B_error<-(graphs$Q2B_right-graphs$Q2B)
graphs$Q2C_error<-(graphs$Q2C_right-graphs$Q2C)
graphs$Q2D_error<-(graphs$Q2D_right-graphs$Q2D)
graphs$Q3B_error<-(graphs$Q3B_right-graphs$Q3B)
graphs$Q3C_error<-(graphs$Q3C_right-graphs$Q3C)
graphs$Q3D_error<-(graphs$Q3D_right-graphs$Q3D)
# Make data set of pie graph errors
m1<-as.data.frame(colMeans(graphs))
colnames(m1) <- c("mean_error")
m1$name<-rownames(m1)
m2<-m1[m1$name %in% c("Q1B_error","Q1C_error","Q1D_error",
"Q2B_error","Q2C_error","Q2D_error",
"Q3B_error","Q3C_error","Q3D_error"),]
m2$name2<-substr(rownames(m2),1,3)
m2$Type<-ifelse(m2$name2 %in% c("Q1B","Q1C","Q1D"),"Position",
ifelse(m2$name2 %in% c("Q2B","Q2C","Q2D"),"Length", "Angle"))
m2$name2
# Plot mean error values
m2$Type <- factor(m2$Type,levels = c("Position", "Length", "Angle"))
p.mean_error<-ggplot(m2, aes(x = name2, y = mean_error, fill = Type))+
geom_bar(stat = "identity", col = "black")+
ylab("Average difference from true value")+
xlab("Question number")+
ggtitle("n = 114 responses")+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color = "black"),
axis.ticks = element_line(size = 0.5, color = "black"))
p.mean_error
m1
m2
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
