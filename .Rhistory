coord_flip() +
#scale_y_continuous(limits = c(0,16000)) +
labs(x = " ", y = "Carbon in live aboveground trees \n(million metric tons)",
title = paste("Carbon in Minnesota's aspen/birch forest"))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
legend.position = "none",
#plot.margin = margin(0, 0, 0, 0, "cm")
)
p.own
storage <- read_csv('C:/Users/russellm/Documents/Arbor/Projects/FRAStateCarbon/Data/storage_state_aspen.csv')
storage_amt <- storage %>%
filter(State == my_STATE & ForestTypeGroup == "Aspen / birch") %>%
mutate(Carbon_UStons = Total * 1.10)
paste("Average carbon density in aboveground trees across", my_STATE, "forests is",
round(storage_amt$Carbon_UStons, 1),"US tons per acre.")
storage_long <- storage %>%
filter(State == my_STATE & ForestTypeGroup == "Aspen / birch") %>%
select(-Total) %>%
pivot_longer(`0`:`96-100`, names_to= "StandAge", values_to = "Carbon") %>%
mutate(Carbon_UStons = Carbon * 1.10)
# storage_type <- storage_long %>%
#   group_by(HdwdSfwd, StandAge) %>%
#   summarize(mean_Carbon_UStons = mean(Carbon_UStons, na.rm = T)) %>%
#   mutate(HdwdSfwd_name = ifelse(HdwdSfwd == "HW", "Hardwood forests", "Softwood forests"))
storage_type <- storage_long
storage_type$StandAge <- factor(storage_type$StandAge, levels = c("0", "0-5", "6-10", "11-15", "16-20",
"21-25", "26-30", "31-35", "36-40",
"41-45", "46-50", "51-55", "56-60",
"61-65", "66-70", "71-75", "76-80",
"81-85", "86-90", "91-95", "96-100"))
p.storage <- ggplot(storage_type, aes(StandAge, Carbon_UStons)) +
geom_bar(stat="identity", col = "black", fill = "lightblue") +
scale_x_discrete(limits=storage_type$StandAge,breaks=storage_type$StandAge[seq(1,length(storage_type$StandAge),by=2)])+
labs(x = "Stand age (years)", y = "Average carbon storage \n(US tons per acre)",
title = paste("Carbon storage in aspen / birch forests in", my_STATE_abbr))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
strip.text = element_text(size=10),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, color = "black"),
#plot.margin = margin(0, 0, 0, 0, "cm")
)
p.storage
p.storage <- ggplot(storage_type, aes(StandAge, Carbon_UStons)) +
geom_bar(stat="identity", col = "black", fill = "lightblue") +
scale_x_discrete(limits=storage_type$StandAge,breaks=storage_type$StandAge[seq(1,length(storage_type$StandAge),by=2)])+
labs(x = "Stand age (years)", y = "Average carbon storage \n(US tons per acre)",
title = paste("Carbon storage in Minnesota's aspen/birch forests"))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
strip.text = element_text(size=10),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, color = "black"),
#plot.margin = margin(0, 0, 0, 0, "cm")
)
p.storage
p.sequest<- ggplot(sequest_type, aes(StandAge, Carbon_UStons, group = 1)) +
geom_point() +
stat_smooth(span = 1, se = F) +
scale_y_reverse() +
scale_x_discrete(limits=sequest_type$StandAge,breaks=sequest_type$StandAge[seq(1,length(sequest_type$StandAge),by=2)])+
geom_hline(yintercept=0, col = "red", linetype = "dashed")+
labs(x = "Stand age (years)", y = "Average carbon sequestration \n(US tons per acre per year)",
title = paste("Carbon sequestration in aspen / birch forests in", my_STATE_abbr))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
strip.text = element_text(size=10),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, color = "black"),
#plot.margin = margin(0, 0, 0, 0, "cm")
)
sequest <- storage %>%
mutate(`0 ` = 0,
`0-5 ` = -1*(`0-5` / 5),
`6-10 ` = -1*((`6-10` - `0-5`) / 5),
`11-15 ` = -1*((`11-15` - `6-10`) / 5),
`16-20 ` = -1*((`16-20` - `11-15`) / 5),
`21-25 ` = -1*((`21-25` - `16-20`) / 5),
`26-30 ` = -1*((`26-30` - `21-25`) / 5),
`31-35 ` = -1*((`31-35` - `26-30`) / 5),
`36-40 ` = -1*((`36-40` - `31-35`) / 5),
`41-45 ` = -1*((`41-45` - `36-40`) / 5),
`46-50 ` = -1*((`46-50` - `41-45`) / 5),
`51-55 ` = -1*((`51-55` - `46-50`) / 5),
`56-60 ` = -1*((`56-60` - `51-55`) / 5),
`61-65 ` = -1*((`61-65` - `56-60`) / 5),
`66-70 ` = -1*((`66-70` - `61-65`) / 5),
`71-75 ` = -1*((`71-75` - `66-70`) / 5),
`76-80 ` = -1*((`76-80` - `71-75`) / 5),
`81-85 ` = -1*((`81-85` - `76-80`) / 5),
`86-90 ` = -1*((`86-90` - `81-85`) / 5),
`91-95 ` = -1*((`91-95` - `86-90`) / 5),
`96-100 ` = -1*((`96-100` - `91-95`) / 5))
sequest_long <- sequest %>%
filter(State == my_STATE & ForestTypeGroup == "Aspen / birch") %>%
select(-c(Total, `0`:`96-100`)) %>%
pivot_longer(`0 `:`96-100 `, names_to= "StandAge", values_to = "Carbon") %>%
mutate(Carbon_UStons = Carbon * 1.10)
# sequest_type <- sequest_long %>%
#   group_by(HdwdSfwd, StandAge) %>%
#   summarize(mean_Carbon_UStons = mean(Carbon_UStons, na.rm = T)) %>%
#   mutate(HdwdSfwd_name = ifelse(HdwdSfwd == "HW", "Hardwood forests", "Softwood forests"))
sequest_type <- sequest_long
sequest_type$StandAge <- factor(sequest_type$StandAge, c("0 ", "0-5 ", "6-10 ", "11-15 ", "16-20 ",
"21-25 ", "26-30 ", "31-35 ", "36-40 ",
"41-45 ", "46-50 ", "51-55 ", "56-60 ",
"61-65 ", "66-70 ", "71-75 ", "76-80 ",
"81-85 ", "86-90 ", "91-95 ", "96-100 "))
sequest_type$StandAge_num <- 1:21
p.sequest<- ggplot(sequest_type, aes(StandAge, Carbon_UStons, group = 1)) +
geom_point() +
stat_smooth(span = 1, se = F) +
scale_y_reverse() +
scale_x_discrete(limits=sequest_type$StandAge,breaks=sequest_type$StandAge[seq(1,length(sequest_type$StandAge),by=2)])+
geom_hline(yintercept=0, col = "red", linetype = "dashed")+
labs(x = "Stand age (years)", y = "Average carbon sequestration \n(US tons per acre per year)",
title = paste("Carbon sequestration in aspen / birch forests in", my_STATE_abbr))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
strip.text = element_text(size=10),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, color = "black"),
#plot.margin = margin(0, 0, 0, 0, "cm")
)
p.sequest
p.sequest<- ggplot(sequest_type, aes(StandAge, Carbon_UStons, group = 1)) +
geom_point() +
stat_smooth(span = 1, se = F) +
scale_y_reverse() +
scale_x_discrete(limits=sequest_type$StandAge,breaks=sequest_type$StandAge[seq(1,length(sequest_type$StandAge),by=2)])+
geom_hline(yintercept=0, col = "red", linetype = "dashed")+
labs(x = "Stand age (years)", y = "Average carbon sequestration \n(US tons per acre per year)",
title = paste("Carbon sequestration in Minnesota's aspen/birch forests"))+
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
strip.text = element_text(size=10),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(color = "black"),
axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, color = "black")
)
p.sequest
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
library(googlesheets4)
emp <- read_sheet("https://docs.google.com/spreadsheets/d/1aT7tmGeSWmFeXoJ-lgnRK3ktLwlnhaInBfPLXWyYIEM/edit?usp=sharing")
# Chunk 1
library(tidyverse)
library(knitr)
library(patchwork)
library(GGally)
library(rgdal)
library(usmap)
library(googlesheets4)
# Chunk 2
pools <- read_sheet("https://docs.google.com/spreadsheets/d/15jGuyx62Kdfcm3VzeDgfbhYGlxs3EvDEsd63QWVIPWM/edit?usp=sharing")
p.pool <- pools %>%
filter(Pool == "Aboveground biomass") %>%
ggplot(aes(reorder(StateName, C_MMT), C_MMT, fill = C_MMT)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Carbon in aboveground biomass \n(million metric tons)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.pool
p.pool2 <- pools %>%
ggplot(aes(reorder(StateName, -C_MMT), C_MMT, fill = Pool)) +
geom_bar(stat="identity") +
facet_wrap(~RegionName, ncol = 2, scales = "free_x") +
labs(x = "State", y = "Forest ecosystem carbon \n(million metric tons)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1))
p.pool2
emp
# Graph of total # of employees by state
p.emp <- ggplot(emp, aes(reorder(State, Employees ), Employees , fill = Employees )) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Number of employees") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.emp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employee_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employees_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
emp <- emp %>%
mutate(comp_emp = (Employees_comp*1000000)/Employees)
# Graph of employee compensation per employee
emp <- emp %>%
mutate(comp_emp = (Employees_comp*1000000)/Employees)
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region) +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale = "free") +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
# Graph of employee compensation per employee
emp <- emp %>%
mutate(comp_emp = (Employees_comp*1000000)/Employees)
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp/1000,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale = "free") +
coord_flip() +
labs(x = " ", y = "Compensation per employee ($ in thousands)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp/1000,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale_y = "free") +
coord_flip() +
labs(x = " ", y = "Compensation per employee ($ in thousands)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp/1000,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale = "free_y") +
coord_flip() +
labs(x = " ", y = "Compensation per employee ($ in thousands)") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
emp <- read_sheet("https://docs.google.com/spreadsheets/d/1aT7tmGeSWmFeXoJ-lgnRK3ktLwlnhaInBfPLXWyYIEM/edit?usp=sharing")
# Graph of total # of employees by state
p.emp <- ggplot(emp, aes(reorder(State, Employees), Employees ,
fill = Employees)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Number of employees") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.emp
p.emp <- ggplot(emp, aes(reorder(State, Employees), Employees ,
fill = Employees)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employees",
title = "Number of employees in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.emp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employees_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Compensation ($ in millions)",
title = "Employee compensation in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
# Graph of employee compensation per employee
emp <- emp %>%
mutate(comp_emp = (Employees_comp*1000000)/Employees)
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp/1000,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale = "free_y") +
coord_flip() +
labs(x = " ", y = "Compensation per employee ($ in thousands)",
title = "Compensation per employee in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
library(tidyverse)
library(googlesheets4)
emp <- read_sheet("https://docs.google.com/spreadsheets/d/1aT7tmGeSWmFeXoJ-lgnRK3ktLwlnhaInBfPLXWyYIEM/edit?usp=sharing")
# Graph of total # of employees by state
p.emp <- ggplot(emp, aes(reorder(State, Employees), Employees ,
fill = Employees)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employees",
title = "Number of employees in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.emp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employees_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Total compensation ($ in millions)",
title = "Employee compensation in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employees_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)",
title = "Total direct employee compensation in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
# Chunk 1
library(tidyverse)
library(googlesheets4)
# Chunk 2
emp <- read_sheet("https://docs.google.com/spreadsheets/d/1aT7tmGeSWmFeXoJ-lgnRK3ktLwlnhaInBfPLXWyYIEM/edit?usp=sharing")
# Chunk 3
# Graph of total # of employees by state
p.emp <- ggplot(emp, aes(reorder(State, Employees), Employees ,
fill = Employees)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employees",
title = "Number of employees in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.emp
# Graph of employee compensation by state
p.comp <- ggplot(emp, aes(reorder(State, Employees_comp), Employees_comp,
fill = Employees_comp)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x = " ", y = "Employee compensation ($ in millions)",
title = "Total direct employee compensation in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
#Ideal salary (sal)
sal<-95000
#Number of hours worked per week (hrs_wk)
#Number of weeks worked per year (wks_yr)
#Number of hours worked per year (hrs_yr)
hrs_wk<-40
wks_yr<-48
hrs_yr<-hrs_wk*wks_yr
hrs_yr
#Hourly salary (sal_hr)
sal_hr<-sal/hrs_yr
sal_hr
#Hourly salary for billable work (sal_hr_bill), assuming half of time is spent on billable work
sal_hr_bill<-sal/(hrs_yr/2)
sal_hr_bill
#Overhead (oh)
oh<-5500
#Overhead per billable hour (oh_hr_bill)
oh_hr_bill<-oh/(hrs_yr/2)
#Hourly rate
rate<-sal_hr_bill+oh_hr_bill
rate
View(emp)
# Graph of employee compensation per employee
emp <- emp %>%
mutate(comp_emp = (Employees_comp*1000000)/Employees)
p.comp <- ggplot(emp, aes(reorder(State, comp_emp), comp_emp/1000,
fill = comp_emp)) +
geom_bar(stat="identity") +
facet_wrap(~Region, scale = "free_y") +
coord_flip() +
labs(x = " ", y = "Compensation per employee ($ in thousands)",
title = "Compensation per employee in forestry sector, 2016",
caption = "Source: Pelkki and Sherman 2020") +
theme(panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"),
axis.text = element_text(color = "black", size = 8),
legend.position = "none")
p.comp
sum(emp$Employees)
sum(emp$Employees_comp)
sum(emp$Employees_comp*1000000)
blogdown:::serve_site()
1
blogdown:::new_post_addin()
blogdown:::serve_site()
library(tidytext)
library(ggwordcloud)
c21 <- read_csv("C://Users//russellm//Documents//Arbor//Data//climate21.csv")
library(tidyverse)
library(tidytext)
library(ggwordcloud)
c21 <- read_csv("C://Users//russellm//Documents//Arbor//Data//climate21.csv")
tidy_c21<- c21 %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
word_c21<- tidy_c21 %>%
group_by(word) %>%
summarize(n_count = n()) %>%
filter(n_count >= 20) %>%
filter(!(word %in% c("the", "and", "in", "to", "of", "s", "a",
"should", "on", "be", "for", "by", "that", "with", "1", "100",
"is", "can", "within", "or", "from", "are", "as",
"while", "have", "also", "has", "will", "also")))
ggplot(word_c21,
aes(label = word,
size = n_count,
color = factor(sample.int(10, nrow(word_c21), replace = TRUE)))) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
word_c21<- tidy_c21 %>%
group_by(word) %>%
summarize(n_count = n()) %>%
filter(n_count >= 20) %>%
filter(!(word %in% c("the", "and", "in", "to", "of", "s", "a", "an", "this",
"should", "on", "be", "for", "by", "that", "with", "1", "100",
"is", "can", "within", "or", "from", "are", "as",
"while", "have", "also", "has", "will", "also")))
ggplot(word_c21,
aes(label = word,
size = n_count,
color = factor(sample.int(10, nrow(word_c21), replace = TRUE)))) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
remotes::install_github('rstudio/blogdown')
remotes::install_github('rstudio/blogdown')
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("htmltools")
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
remotes::install_github('rstudio/blogdown')
