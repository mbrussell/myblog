both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
# Chunk 1
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
# Chunk 2
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, MgmtUnit %in% c("9","16","12","20") & Year>=2008 & DBH >= 0)
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
# Chunk 3
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
# Chunk 4
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))
# Chunk 5
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
# Chunk 6
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary, mult=1, geom="crossbar", width=0.2)
# Chunk 7
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.3)
# Chunk 8
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
# Chunk 1
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
# Chunk 2
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, MgmtUnit %in% c("9","16","12","20") & Year>=2008 & DBH >= 0)
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary, mult=1, geom="crossbar", width=0.2)
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
# tree %>%
#   group_by(MgmtUnit) %>%
#   summarise(max.year = max(Year), n = n())
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, MgmtUnit %in% c("9","16","12","20") & Year>=2008 & DBH >= 0)
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
theme(legend.title = element_blank())
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
theme(legend = element_blank())
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
theme(legend.psition = "none")
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
theme(legend.position = "none")
# Chunk 1
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
# tree %>%
#   group_by(MgmtUnit) %>%
#   summarise(max.year = max(Year), n = n())
# Chunk 2
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, MgmtUnit %in% c("9","16","12","20") & Year>=2008 & DBH >= 0)
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
# Chunk 3
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.3)
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
# Chunk 1
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, (MgmtUnit == 20 & Year==2008 & DBH >= 0) |
(MgmtUnit == 9 & Year==2013 & DBH >= 0) |
(MgmtUnit == 12 & Year==2014 & DBH >= 0) |
(MgmtUnit == 16 & Year==2012 & DBH >= 0))
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
# Chunk 1
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
# Chunk 2
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, (MgmtUnit == 20 & Year==2008 & DBH >= 0) |
(MgmtUnit == 9 & Year==2013 & DBH >= 0) |
(MgmtUnit == 12 & Year==2014 & DBH >= 0) |
(MgmtUnit == 16 & Year==2012 & DBH >= 0))
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
# Chunk 3
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
# Chunk 4
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))
# Chunk 5
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
# Chunk 6
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.3)
# Chunk 7
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
library(tidyverse)
tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
tree %>%
group_by(MgmtUnit) %>%
summarise(max.year = max(Year), n = n())
library(tidyverse)
library(gsheet)
tree<- gsheet2tbl('https://docs.google.com/spreadsheets/d/19XgWp2naizuqvSSr-DlJ0r-53IBgQd8X7yDx_KjkWWE/edit?usp=sharing')
#tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
# tree %>%
#   group_by(MgmtUnit) %>%
#   summarise(max.year = max(Year), n = n())
# Chunk 1
library(tidyverse)
library(gsheet)
tree<- gsheet2tbl('https://docs.google.com/spreadsheets/d/19XgWp2naizuqvSSr-DlJ0r-53IBgQd8X7yDx_KjkWWE/edit?usp=sharing')
#tree<-read.csv('C://Users//russellm//Documents//Data//Blog//pef.csv')
# tree %>%
#   group_by(MgmtUnit) %>%
#   summarise(max.year = max(Year), n = n())
# Chunk 2
#tree<-subset(tree, MgmtUnit %in% c(21,30) & Year==2013)
#tree<-subset(tree, MgmtUnit %in% c("29A","29B") & Year>=2009)
#tree<-subset(tree, MgmtUnit %in% c("32A","32B") & Year>=2009)
tree<-subset(tree, (MgmtUnit == 20 & Year==2008 & DBH >= 0) |
(MgmtUnit == 9 & Year==2013 & DBH >= 0) |
(MgmtUnit == 12 & Year==2014 & DBH >= 0) |
(MgmtUnit == 16 & Year==2012 & DBH >= 0))
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
# Chunk 3
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none")
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
# Chunk 4
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))
# Chunk 5
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
# Chunk 6
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.3)
# Chunk 7
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none",
panel.background = element_rect(fill = "NA"))
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none",
panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"))
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(axis.line = element_line(color="black"))
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(axis.line = element_line(color="black"),
panel.background = element_rect(fill = "NA"))
# Chunk 1
library(tidyverse)
library(gsheet)
tree<- gsheet2tbl('https://docs.google.com/spreadsheets/d/19XgWp2naizuqvSSr-DlJ0r-53IBgQd8X7yDx_KjkWWE/edit?usp=sharing')
# Select only the last year of measurement from each management unit
tree<-subset(tree, (MgmtUnit == 20 & Year==2008 & DBH >= 0) |
(MgmtUnit == 9 & Year==2013 & DBH >= 0) |
(MgmtUnit == 12 & Year==2014 & DBH >= 0) |
(MgmtUnit == 16 & Year==2012 & DBH >= 0))
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management Unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none",
panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"))
p.tree+geom_boxplot(outlier.colour="red",outlier.shape=8)
# Chunk 1
library(tidyverse)
library(gsheet)
tree<- gsheet2tbl('https://docs.google.com/spreadsheets/d/19XgWp2naizuqvSSr-DlJ0r-53IBgQd8X7yDx_KjkWWE/edit?usp=sharing')
# Chunk 2
# Select only the last year of measurement from each management unit
tree<-subset(tree, (MgmtUnit == 20 & Year==2008 & DBH >= 0) |
(MgmtUnit == 9 & Year==2013 & DBH >= 0) |
(MgmtUnit == 12 & Year==2014 & DBH >= 0) |
(MgmtUnit == 16 & Year==2012 & DBH >= 0))
tree$MgmtUnit<-factor(tree$MgmtUnit)
tree$DBH<-as.numeric(tree$DBH)
tree$treesize<-ifelse(tree$EXPF>=20,"Understory","Overstory")
#tree<-subset(tree, MgmtUnit %in% c(8,22) & Year>=2008)
p.tree<-ggplot(tree,aes(MgmtUnit,DBH))+
xlab("Management unit")+
ylab("Tree diameter (inches)")+
theme(legend.position = "none",
panel.background = element_rect(fill = "NA"),
axis.line = element_line(color="black"))
p.tree + geom_boxplot(outlier.colour="red",outlier.shape=8)
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
p.tree + geom_violin(aes(fill = factor(MgmtUnit)))+
stat_summary(fun.data=data_summary)
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.3)
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
p.tree+geom_violin(aes(fill = factor(MgmtUnit)))+
geom_boxplot(width=0.2)
ggplot(tree, aes(MgmtUnit, DBH, fill = factor(treesize))) +
geom_split_violin()+
xlab("Management unit")+
ylab("Tree diameter (inches)")+
theme(axis.line = element_line(color="black"),
panel.background = element_rect(fill = "NA"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
