tree <- tribble(
~treeid, ~dbh, ~ht,
1, 4.5,	30.8,
2, 4.6,	32.7,
3, 11.7, 62.8,
4, 13.8, 66.9,
5, 4.7,	29.3,
6, 7.3,	51.3,
7, 14.5,	65.5,
8, 9.6, 58.9,
9, 12.1, 67.5,
10, 16.9, 75.8,
11, 11.9,	69,
12, 13.2,	65.1,
13, 12,	63.3,
14, 14.2,	68.2,
15, 6.3, 47.9,
16, 4.9, 32.4,
17, 8.1, 49.2,
18, 9.1, 48.1,
19, 11.2,	48,
20, 9.9, 49.5,
21, 5.7, 26.8,
22, 12.9, 58.7,
23, 5.8, 35.4,
24, 4.9, 35.4,
25, 24,	89.6,
26, 6.2, 47.4,
27, 5.9, 54.4,
28, 4.5, 40.3
)
expf <- 5
tree <- tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf)
plot <- tree %>%
summarize(LOREY_HT = sum(lorey_num) / sum(ba_tree))
plot
expf <- 5
tree <- tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf)
plot <- tree %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
plot
mean(tree$ht)
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
library(rFIA)
blogdown:::serve_site()
nyfia <- getFIA(states = 'NY',
tables = "TREE",
dir = 'C:/Users/matt/Documents/git/myblog/content/post/2023-04-19-lorey-s-height-the-remote-sensor-s-favorite-way-to-define-tree-height')
nytree <- nyfia$TREE
nytree <- nyfia$TREE %>%
filter(STATUSCD == 1)
table(nytree$HTCD)
nytree <- nyfia$TREE %>%
filter(STATUSCD == 1 & DIA > = 5.0)
nytree <- nyfia$TREE %>%
filter(STATUSCD == 1 & DIA >= 5.0)
table(nytree$HTCD)
summary(nytree$ACTUALHT)
nyfia <- getFIA(states = 'NY',
tables = "TREE",
dir = 'your/path/goes/here')
nyFIA <- clipFIA(nyfia, mostRecent = TRUE)
nyfia <- getFIA(states = 'NY',
tables = "TREE",
dir = 'C:/Users/matt/Documents/git/myblog/content/post/2023-04-19-lorey-s-height-the-remote-sensor-s-favorite-way-to-define-tree-height')
nyfia <- clipFIA(nyfia, mostRecent = TRUE)
View(nyfia)
nyfia <- clipFIA(nyfia, mostRecent = TRUE)
nyfia_recent <- clipFIA(nyfia, mostRecent = TRUE)
nyfia_recent <- clipFIA(nyfia, mostRecent = TRUE)
nyfia_recent <- clipFIA(nyfia)
nyfia
nytree <- nyfia$TREE %>%
filter(STATUSCD == 1 & DIA >= 5.0 & INVYR >= 2013)
summary(nytree$ACTUALHT)
plot(nyfia)
plotFIA(nyfia)
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'C:/Users/matt/Documents/git/myblog/content/post/2023-04-19-lorey-s-height-the-remote-sensor-s-favorite-way-to-define-tree-height')
plotFIA(nyfia)
plotFIA(nyfia, size = 0.05)
plotFIA(nyfia) %>%
filter(INVYR >= 2013)
nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ) %>%
summarize(num_plots = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ) %>%
group_by(PLT_CN) %>%
summarize(num_plots = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
nyplot <- nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ) %>%
group_by(PLT_CN) %>%
summarize(num_plots = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
View(nyplot)
nyplot <- nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ) %>%
group_by(PLT_CN) %>%
summarize(num_trees = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
View(nyplot)
ggplot(nyplot, aes(y = LOREY_HT)) +
geom_violin()
ggplot(nyplot, aes(x = LOREY_HT)) +
geom_violin()
ggplot(nyplot, aes(x = LOREY_HT)) +
geom_violin(stat = "ydensity")
nyplot
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin()
ggplot(nyplot, aes(x = 1, y = LOREY_HT)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) +
theme(axis.title.y = element_blank())
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) +
labs(x = "Lorey's height (feet)")
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
tree$CR
nytree$CRCLCD
nytree$CCLCD
nyplot <- nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ,
ACTUALHT_dom_codom = ifelse(CCLCD %in% c(2,3), ACTUALHT, NA)) %>%
group_by(PLT_CN) %>%
summarize(num_trees = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree),
ARITH_HT = mean(ACTUALHT),
DOM_CODOM_HT = mean(ACTUALHT_dom_codom, na.rm = T))
View(nyplot)
nyplot_q <- nytree %>%
group_by(PLT_CN) %>%
mutate(quant_80 = quantile(DIA, p = 0.8))
View(nyplot_q)
View(nyplot_q)
nyplot_q <- nytree %>%
group_by(PLT_CN) %>%
summarize(quant_80 = quantile(DIA, p = 0.8))
View(nyplot_q)
nyplot_q <- nytree %>%
group_by(PLT_CN) %>%
summarize(pctl_80 = quantile(DIA, p = 0.8))
nyplot <- nytree %>%
inner_join(nyplot_q) %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ,
ACTUALHT_dom_codom = ifelse(CCLCD %in% c(2,3), ACTUALHT, NA),
ACTUALHT_pctl_80 = ifelse(DIA >= pctl_80, ACTUALHT, NA)) %>%
group_by(PLT_CN) %>%
summarize(num_trees = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree),
ARITH_HT = mean(ACTUALHT),
DOM_CODOM_HT = mean(ACTUALHT_dom_codom, na.rm = T),
LARGE_HT = mean(ACTUALHT_pctl_80, na.rm = T))
View(nyplot)
nyplot_long <-nyplot %>%
pivot_longer(LOREY_HT:LARGE_HT, names_to = `Top height definition`, values_to = `Height (feet)`)
nyplot_long <-nyplot %>%
pivot_longer(LOREY_HT:LARGE_HT, names_to = "`Top height definition`", values_to = "`Height (feet)`")
View(nyplot_long)
ggplot(nyplot, aes(x = `Top height definition`, y = `Height (feet)`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(nyplot_long, aes(x = `Top height definition`, y = `Height (feet)`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
nyplot_long
nyplot_long <-nyplot %>%
pivot_longer(LOREY_HT:LARGE_HT, names_to = "Top height definition", values_to = "`Height (feet)`")
nyplot_long
nyplot_long <-nyplot %>%
pivot_longer(LOREY_HT:LARGE_HT, names_to = "Top height definition", values_to = "Height (feet)")
ggplot(nyplot_long, aes(x = `Top height definition`, y = `Height (feet)`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)")
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)") +
scale_y_discrete(labels = c("1", "2", "3", "4"))
#+
# scale_y_discrete(labels = c("1", "2", "3", "4"))
```
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)")
#+
# scale_y_discrete(labels = c("Lorey's", "2", "3", "4"))
```
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)")+
scale_y_discrete(labels = c("Lorey's", "2", "3", "4"))
ggplot(nyplot_long, aes(x = `Height (feet)`, y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)")
ggplot(nyplot_long, aes(x = `Height (feet)`,
y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)") +
scale_y_discrete(labels = c("Arithmetic mean", "Dominant/co-dominant",
"Largest diameter", "Lorey's"))
ggplot(nyplot_long, aes(x = `Height (feet)`,
y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)") +
scale_y_discrete(labels = c("Arithmetic mean", "Dominant/co-dominant",
"Largest 20% diameter", "Lorey's"))
ggpairs(ggpairs(nyplot, title = "Correlation of top height definitions from New York FIA data"))
library(GGally)
ggpairs(ggpairs(nyplot, title = "Correlation of top height definitions from New York FIA data"))
nyplot
ggpairs(ggpairs(as.data.frame(nyplot), title = "Correlation of top height definitions from New York FIA data"))
as.data.frame(nyplot)
ggpairs(ggpairs(as.data.frame(nyplot), title = "Correlation of top height definitions from New York FIA data"))
ggpairs(ggpairs(data.frame(nyplot), title = "Correlation of top height definitions from New York FIA data"))
ny_plot_df <- as.data.frame(nyplot)
ggpairs(ggpairs(ny_plot_df, title = "Correlation of top height definitions from New York FIA data"))
ny_plot_df <- as.data.frame(nyplot[4:6])
ggpairs(ggpairs(ny_plot_df, title = "Correlation of top height definitions from New York FIA data"))
ny_plot_df <- as.data.frame(nyplot[4:6])
View(nyplot)
ny_plot_df <- nyplot[4:7,]
ggpairs(ggpairs(ny_plot_df, title = "Correlation of top height definitions from New York FIA data"))
ny_plot_df
ny_plot_df <- nyplot[,4:7]
ggpairs(ggpairs(ny_plot_df, title = "Correlation of top height definitions from New York FIA data"))
ggpairs(ny_plot_ht, title = "Correlation of top height definitions from New York FIA data")
ny_plot_ht <- nyplot[,4:7]
ggpairs(ny_plot_ht, title = "Correlation of top height definitions from New York FIA data")
library(tidyverse)
tree <- tribble(
~treeid, ~dbh, ~ht,
1, 4.5,	30.8,
2, 4.6,	32.7,
3, 11.7, 62.8,
4, 13.8, 66.9,
5, 4.7,	29.3,
6, 7.3,	51.3,
7, 14.5,	65.5,
8, 9.6, 58.9,
9, 12.1, 67.5,
10, 16.9, 75.8,
11, 11.9,	69,
12, 13.2,	65.1,
13, 12,	63.3,
14, 14.2,	68.2,
15, 6.3, 47.9,
16, 4.9, 32.4,
17, 8.1, 49.2,
18, 9.1, 48.1,
19, 11.2,	48,
20, 9.9, 49.5,
21, 5.7, 26.8,
22, 12.9, 58.7,
23, 5.8, 35.4,
24, 4.9, 35.4,
25, 24,	89.6,
26, 6.2, 47.4,
27, 5.9, 54.4,
28, 4.5, 40.3
)
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / BA)
expf
install.packages("sitreeE")
library(sitreeE)
#install.packages("sitreeE")
library(sitreeE)
BA <- pi*(tree$dbh/2)^2
lorey.height(BA, tree$ht)
BA
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / BA)
nyplot <- nytree %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ) %>%
group_by(PLT_CN) %>%
summarize(num_trees = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree))
nyplot
ggplot(nyplot, aes(x = LOREY_HT, y = 1)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Lorey's height (feet)") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
nyplot_q <- nytree %>%
group_by(PLT_CN) %>%
summarize(pctl_80 = quantile(DIA, p = 0.8))
nyplot <- nytree %>%
inner_join(nyplot_q) %>%
mutate(ba_tree = (0.00545415*DIA^2)*TPA_UNADJ,
lorey_num = (0.00545415*DIA^2)*ACTUALHT*TPA_UNADJ,
ACTUALHT_dom_codom = ifelse(CCLCD %in% c(2,3), ACTUALHT, NA),
ACTUALHT_pctl_80 = ifelse(DIA >= pctl_80, ACTUALHT, NA)) %>%
group_by(PLT_CN) %>%
summarize(num_trees = n(),
BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / sum(ba_tree),
ARITH_HT = mean(ACTUALHT),
DOM_CODOM_HT = mean(ACTUALHT_dom_codom, na.rm = T),
LARGE_HT = mean(ACTUALHT_pctl_80, na.rm = T))
nyplot
nyplot_long <-nyplot %>%
pivot_longer(LOREY_HT:LARGE_HT, names_to = "Top height definition",
values_to = "Height (feet)")
ggplot(nyplot_long, aes(x = `Height (feet)`,
y = `Top height definition`)) +
geom_violin(draw_quantiles = c(0.5)) +
labs(x = "Top height (feet)") +
scale_y_discrete(labels = c("Arithmetic mean", "Dominant/co-dominant",
"Largest 20% diameter", "Lorey's"))
ny_plot_ht <- nyplot[,4:7]
ggpairs(ny_plot_ht,
title = "Correlation of top height definitions from New York FIA data")
library(GGally)
ny_plot_ht <- nyplot[,4:7]
ggpairs(ny_plot_ht,
title = "Correlation of top height definitions from New York FIA data")
blogdown:::serve_site()
# install.packages("sitreeE")
library(sitreeE)
BA2 <- pi*(tree$dbh/2)^2
LOREY_HT2 <- lorey.height(BA, tree$ht)
print(mean(BA2))
# install.packages("sitreeE")
library(sitreeE)
BA2 <- pi*(tree$dbh/2)^2
LOREY_HT2 <- lorey.height(BA, tree$ht)
print(mean(BA2), LOREY_HT2)
# install.packages("sitreeE")
library(sitreeE)
BA2 <- pi*(tree$dbh/2)^2
LOREY_HT2 <- lorey.height(BA, tree$ht)
print(c(mean(BA2), LOREY_HT2))
expf <- 5
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / BA)
# install.packages("sitreeE")
library(sitreeE)
BA2 <- pi*(tree$dbh/2)^2
LOREY_HT2 <- lorey.height(BA, tree$ht)
print(LOREY_HT2)
expf <- 5
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / BA)
nyfia_TREE <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_TREE.csv")
nyfia_PLOT <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_PLOT.csv")
```{r eval = F, message = F, warning = F}
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'your/path/goes/here')
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'your/path/goes/here')
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'your/path/goes/here')
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'your/path/goes/here')
# Chunk 1
library(tidyverse)
# Chunk 2
tree <- tribble(
~treeid, ~dbh, ~ht,
1, 4.5,	30.8,
2, 4.6,	32.7,
3, 11.7, 62.8,
4, 13.8, 66.9,
5, 4.7,	29.3,
6, 7.3,	51.3,
7, 14.5,	65.5,
8, 9.6, 58.9,
9, 12.1, 67.5,
10, 16.9, 75.8,
11, 11.9,	69,
12, 13.2,	65.1,
13, 12,	63.3,
14, 14.2,	68.2,
15, 6.3, 47.9,
16, 4.9, 32.4,
17, 8.1, 49.2,
18, 9.1, 48.1,
19, 11.2,	48,
20, 9.9, 49.5,
21, 5.7, 26.8,
22, 12.9, 58.7,
23, 5.8, 35.4,
24, 4.9, 35.4,
25, 24,	89.6,
26, 6.2, 47.4,
27, 5.9, 54.4,
28, 4.5, 40.3
)
# Chunk 3
expf <- 5
tree %>%
mutate(ba_tree = (0.00545415*dbh^2)*expf,
lorey_num = (0.00545415*dbh^2)*ht*expf) %>%
summarize(BA = sum(ba_tree),
LOREY_HT = sum(lorey_num) / BA)
# Chunk 4
# install.packages("sitreeE")
library(sitreeE)
BA2 <- pi*(tree$dbh/2)^2
LOREY_HT2 <- lorey.height(BA2, tree$ht)
print(LOREY_HT2)
# Chunk 5
library(rFIA)
# Chunk 6
nyfia_TREE <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_TREE.csv")
nyfia_PLOT <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_PLOT.csv")
# Chunk 7
# execute code if the date is later than a specified day
do_it = Sys.Date() > '2023-06-30'
# Chunk 8
x = rnorm(100)
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'your/path/goes/here')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
nyfia_TREE <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_TREE.csv")
library(tidyverse)
nyfia_TREE <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_TREE.csv")
nyfia_PLOT <- read_csv("C:/Users/matt/Documents/Arbor/Data/NY_PLOT.csv")
plotFIA(nyfia)
library(rFIA)
plotFIA(nyfia)
nyfia <- getFIA(states = 'NY',
tables = c("TREE", "PLOT"),
dir = 'C:/Users/matt/Documents/Arbor')
library(rFIA)
plotFIA(nyfia)
